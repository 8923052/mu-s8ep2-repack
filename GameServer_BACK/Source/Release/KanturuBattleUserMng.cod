; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\muserver_dev\development\MU-S8EP2-Repack\GameServer\Source\KanturuBattleUserMng.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7CKanturuBattleUser@@6B@			; CKanturuBattleUser::`vftable'
PUBLIC	??1CKanturuBattleUser@@UAE@XZ			; CKanturuBattleUser::~CKanturuBattleUser
PUBLIC	??_R4CKanturuBattleUser@@6B@			; CKanturuBattleUser::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCKanturuBattleUser@@@8			; CKanturuBattleUser `RTTI Type Descriptor'
PUBLIC	??_R3CKanturuBattleUser@@8			; CKanturuBattleUser::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CKanturuBattleUser@@8			; CKanturuBattleUser::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CKanturuBattleUser@@8		; CKanturuBattleUser::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECKanturuBattleUser@@UAEPAXI@Z:PROC		; CKanturuBattleUser::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CKanturuBattleUser@@8
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleuser.h
rdata$r	SEGMENT
??_R1A@?0A@EA@CKanturuBattleUser@@8 DD FLAT:??_R0?AVCKanturuBattleUser@@@8 ; CKanturuBattleUser::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CKanturuBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_R2CKanturuBattleUser@@8
rdata$r	SEGMENT
??_R2CKanturuBattleUser@@8 DD FLAT:??_R1A@?0A@EA@CKanturuBattleUser@@8 ; CKanturuBattleUser::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CKanturuBattleUser@@8
rdata$r	SEGMENT
??_R3CKanturuBattleUser@@8 DD 00H			; CKanturuBattleUser::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CKanturuBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCKanturuBattleUser@@@8
_DATA	SEGMENT
??_R0?AVCKanturuBattleUser@@@8 DD FLAT:??_7type_info@@6B@ ; CKanturuBattleUser `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCKanturuBattleUser@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CKanturuBattleUser@@6B@
rdata$r	SEGMENT
??_R4CKanturuBattleUser@@6B@ DD 00H			; CKanturuBattleUser::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCKanturuBattleUser@@@8
	DD	FLAT:??_R3CKanturuBattleUser@@8
rdata$r	ENDS
;	COMDAT ??_7CKanturuBattleUser@@6B@
CONST	SEGMENT
??_7CKanturuBattleUser@@6B@ DD FLAT:??_R4CKanturuBattleUser@@6B@ ; CKanturuBattleUser::`vftable'
	DD	FLAT:??_ECKanturuBattleUser@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CKanturuBattleUser@@UAE@XZ
_TEXT	SEGMENT
??1CKanturuBattleUser@@UAE@XZ PROC			; CKanturuBattleUser::~CKanturuBattleUser, COMDAT
; _this$ = ecx

; 14   : 	virtual ~CKanturuBattleUser(){return;}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CKanturuBattleUser@@6B@
  00006	c3		 ret	 0
??1CKanturuBattleUser@@UAE@XZ ENDP			; CKanturuBattleUser::~CKanturuBattleUser
_TEXT	ENDS
PUBLIC	?ResetData@CKanturuBattleUser@@QAEXXZ		; CKanturuBattleUser::ResetData
; Function compile flags: /Ogtp
;	COMDAT ?ResetData@CKanturuBattleUser@@QAEXXZ
_TEXT	SEGMENT
?ResetData@CKanturuBattleUser@@QAEXXZ PROC		; CKanturuBattleUser::ResetData, COMDAT
; _this$ = ecx

; 18   : 		this->m_iIndex = -1;

  00000	c7 41 04 ff ff
	ff ff		 mov	 DWORD PTR [ecx+4], -1

; 19   : 		this->m_bIsUse = FALSE;

  00007	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 20   : 	}

  0000e	c3		 ret	 0
?ResetData@CKanturuBattleUser@@QAEXXZ ENDP		; CKanturuBattleUser::ResetData
_TEXT	ENDS
PUBLIC	?GetIndex@CKanturuBattleUser@@QAEHXZ		; CKanturuBattleUser::GetIndex
; Function compile flags: /Ogtp
;	COMDAT ?GetIndex@CKanturuBattleUser@@QAEHXZ
_TEXT	SEGMENT
?GetIndex@CKanturuBattleUser@@QAEHXZ PROC		; CKanturuBattleUser::GetIndex, COMDAT
; _this$ = ecx

; 24   : 		return this->m_iIndex;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 25   : 	}

  00003	c3		 ret	 0
?GetIndex@CKanturuBattleUser@@QAEHXZ ENDP		; CKanturuBattleUser::GetIndex
_TEXT	ENDS
PUBLIC	?SetIndex@CKanturuBattleUser@@QAEXH@Z		; CKanturuBattleUser::SetIndex
; Function compile flags: /Ogtp
;	COMDAT ?SetIndex@CKanturuBattleUser@@QAEXH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?SetIndex@CKanturuBattleUser@@QAEXH@Z PROC		; CKanturuBattleUser::SetIndex, COMDAT
; _this$ = ecx

; 28   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 29   : 		this->m_iIndex = iIndex;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 30   : 		this->m_bIsUse = TRUE;

  00009	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1

; 31   : 	}

  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
?SetIndex@CKanturuBattleUser@@QAEXH@Z ENDP		; CKanturuBattleUser::SetIndex
_TEXT	ENDS
PUBLIC	?IsUseData@CKanturuBattleUser@@QAEHXZ		; CKanturuBattleUser::IsUseData
; Function compile flags: /Ogtp
;	COMDAT ?IsUseData@CKanturuBattleUser@@QAEHXZ
_TEXT	SEGMENT
?IsUseData@CKanturuBattleUser@@QAEHXZ PROC		; CKanturuBattleUser::IsUseData, COMDAT
; _this$ = ecx

; 35   : 		return this->m_bIsUse;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 36   : 	}

  00003	c3		 ret	 0
?IsUseData@CKanturuBattleUser@@QAEHXZ ENDP		; CKanturuBattleUser::IsUseData
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCKanturuBattleUser@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCKanturuBattleUser@@UAEPAXI@Z PROC			; CKanturuBattleUser::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CKanturuBattleUser@@6B@
  00010	74 09		 je	 SHORT $LN6@scalar
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$LN6@scalar:
  0001b	8b c6		 mov	 eax, esi
  0001d	5e		 pop	 esi
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??_GCKanturuBattleUser@@UAEPAXI@Z ENDP			; CKanturuBattleUser::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1OBJECTSTRUCT@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1OBJECTSTRUCT@@QAE@XZ$0
__ehfuncinfo$??1OBJECTSTRUCT@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1OBJECTSTRUCT@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1OBJECTSTRUCT@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  0002f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00036	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0003b	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00041	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00048	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1OBJECTSTRUCT@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 0c 16 00
	00		 add	 ecx, 5644		; 0000160cH
  00009	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
__ehhandler$??1OBJECTSTRUCT@@QAE@XZ:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1OBJECTSTRUCT@@QAE@XZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	??_7CKanturuBattleUserMng@@6B@			; CKanturuBattleUserMng::`vftable'
PUBLIC	??1CKanturuBattleUserMng@@UAE@XZ		; CKanturuBattleUserMng::~CKanturuBattleUserMng
PUBLIC	??_R4CKanturuBattleUserMng@@6B@			; CKanturuBattleUserMng::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCKanturuBattleUserMng@@@8		; CKanturuBattleUserMng `RTTI Type Descriptor'
PUBLIC	??_R3CKanturuBattleUserMng@@8			; CKanturuBattleUserMng::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CKanturuBattleUserMng@@8			; CKanturuBattleUserMng::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CKanturuBattleUserMng@@8		; CKanturuBattleUserMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??_ECKanturuBattleUserMng@@UAEPAXI@Z:PROC	; CKanturuBattleUserMng::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CKanturuBattleUserMng@@8
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleusermng.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CKanturuBattleUserMng@@8 DD FLAT:??_R0?AVCKanturuBattleUserMng@@@8 ; CKanturuBattleUserMng::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CKanturuBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_R2CKanturuBattleUserMng@@8
rdata$r	SEGMENT
??_R2CKanturuBattleUserMng@@8 DD FLAT:??_R1A@?0A@EA@CKanturuBattleUserMng@@8 ; CKanturuBattleUserMng::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CKanturuBattleUserMng@@8
rdata$r	SEGMENT
??_R3CKanturuBattleUserMng@@8 DD 00H			; CKanturuBattleUserMng::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CKanturuBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCKanturuBattleUserMng@@@8
_DATA	SEGMENT
??_R0?AVCKanturuBattleUserMng@@@8 DD FLAT:??_7type_info@@6B@ ; CKanturuBattleUserMng `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCKanturuBattleUserMng@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CKanturuBattleUserMng@@6B@
rdata$r	SEGMENT
??_R4CKanturuBattleUserMng@@6B@ DD 00H			; CKanturuBattleUserMng::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCKanturuBattleUserMng@@@8
	DD	FLAT:??_R3CKanturuBattleUserMng@@8
rdata$r	ENDS
;	COMDAT ??_7CKanturuBattleUserMng@@6B@
CONST	SEGMENT
??_7CKanturuBattleUserMng@@6B@ DD FLAT:??_R4CKanturuBattleUserMng@@6B@ ; CKanturuBattleUserMng::`vftable'
	DD	FLAT:??_ECKanturuBattleUserMng@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CKanturuBattleUserMng@@UAE@XZ
_TEXT	SEGMENT
??1CKanturuBattleUserMng@@UAE@XZ PROC			; CKanturuBattleUserMng::~CKanturuBattleUserMng, COMDAT
; _this$ = ecx

; 24   : 	return;
; 25   : }

  00000	68 00 00 00 00	 push	 OFFSET ??1CKanturuBattleUser@@UAE@XZ ; CKanturuBattleUser::~CKanturuBattleUser
  00005	6a 0f		 push	 15			; 0000000fH
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CKanturuBattleUserMng@@6B@
  0000d	6a 0c		 push	 12			; 0000000cH
  0000f	83 c1 04	 add	 ecx, 4
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00018	c3		 ret	 0
??1CKanturuBattleUserMng@@UAE@XZ ENDP			; CKanturuBattleUserMng::~CKanturuBattleUserMng
_TEXT	ENDS
PUBLIC	??_C@_0DO@CJKNCKNK@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@ ; `string'
PUBLIC	??_C@_0EI@JMGEKMPE@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@ ; `string'
PUBLIC	?DeleteUserData@CKanturuBattleUserMng@@QAEHH@Z	; CKanturuBattleUserMng::DeleteUserData
EXTRN	?LogAddTD@@3P6AXPADZZA:DWORD			; LogAddTD
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
;	COMDAT ??_C@_0DO@CJKNCKNK@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleuser.h
CONST	SEGMENT
??_C@_0DO@CJKNCKNK@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@ DB '['
	DB	' KANTURU ][ BattleUser ] Delete User Fail - Unvalid Index:%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@JMGEKMPE@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@
CONST	SEGMENT
??_C@_0EI@JMGEKMPE@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@ DB '['
	DB	' KANTURU ][ BattleUser ] Delete User - [%s][%s] Current Battl'
	DB	'e User:%d', 00H				; `string'
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleusermng.cpp
CONST	ENDS
;	COMDAT ?DeleteUserData@CKanturuBattleUserMng@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?DeleteUserData@CKanturuBattleUserMng@@QAEHH@Z PROC	; CKanturuBattleUserMng::DeleteUserData, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 77   : 	if ( iIndex < 0 || iIndex > OBJMAX-1)

  00003	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00006	3d eb 2c 00 00	 cmp	 eax, 11499		; 00002cebH
  0000b	0f 87 80 00 00
	00		 ja	 $LN6@DeleteUser

; 83   : 	}
; 84   : 
; 85   : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  00011	56		 push	 esi
  00012	33 d2		 xor	 edx, edx
  00014	8d 71 08	 lea	 esi, DWORD PTR [ecx+8]
$LL5@DeleteUser:

; 86   : 	{
; 87   : 		if ( this->m_BattleUser[iCount].IsUseData() == TRUE )

  00017	83 7e 04 01	 cmp	 DWORD PTR [esi+4], 1
  0001b	75 04		 jne	 SHORT $LN4@DeleteUser

; 88   : 		{
; 89   : 			if ( this->m_BattleUser[iCount].GetIndex() == iIndex )

  0001d	39 06		 cmp	 DWORD PTR [esi], eax
  0001f	74 10		 je	 SHORT $LN17@DeleteUser
$LN4@DeleteUser:

; 83   : 	}
; 84   : 
; 85   : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  00021	42		 inc	 edx
  00022	83 c6 0c	 add	 esi, 12			; 0000000cH
  00025	83 fa 0f	 cmp	 edx, 15			; 0000000fH
  00028	7c ed		 jl	 SHORT $LL5@DeleteUser

; 101  : 			}
; 102  : 		}
; 103  : 	}
; 104  : 
; 105  : 	return FALSE;

  0002a	33 c0		 xor	 eax, eax
  0002c	5e		 pop	 esi

; 106  : }

  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
$LN17@DeleteUser:

; 90   : 			{
; 91   : 				this->m_BattleUser[iCount].ResetData();
; 92   : 				this->m_iBattleUserCount--;
; 93   : #if (GS_CASTLE == 0 || GS_SPEC == 1)
; 94   : 				gObj[iIndex].m_bKanturuEntranceByNPC = FALSE;

  00031	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00037	8d 14 52	 lea	 edx, DWORD PTR [edx+edx*2]
  0003a	8d 54 91 04	 lea	 edx, DWORD PTR [ecx+edx*4+4]
  0003e	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  00045	83 ce ff	 or	 esi, -1
  00048	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0004b	01 b1 b8 00 00
	00		 add	 DWORD PTR [ecx+184], esi
  00051	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00057	c7 84 10 a0 25
	00 00 00 00 00
	00		 mov	 DWORD PTR [eax+edx+9632], 0

; 95   : #endif
; 96   : 
; 97   : 				LogAddTD("[ KANTURU ][ BattleUser ] Delete User - [%s][%s] Current Battle User:%d",
; 98   : 					gObj[iIndex].AccountID, gObj[iIndex].Name, this->m_iBattleUserCount);

  00062	8b 89 b8 00 00
	00		 mov	 ecx, DWORD PTR [ecx+184]
  00068	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006e	51		 push	 ecx
  0006f	8d 4c 10 5d	 lea	 ecx, DWORD PTR [eax+edx+93]
  00073	51		 push	 ecx
  00074	8d 54 10 52	 lea	 edx, DWORD PTR [eax+edx+82]
  00078	52		 push	 edx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@JMGEKMPE@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@
  0007e	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00084	83 c4 10	 add	 esp, 16			; 00000010H

; 99   : 
; 100  : 				return TRUE;

  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	5e		 pop	 esi

; 106  : }

  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
$LN6@DeleteUser:

; 78   : 	{
; 79   : 		LogAddTD("[ KANTURU ][ BattleUser ] Delete User Fail - Unvalid Index:%d",
; 80   : 			iIndex);

  00091	50		 push	 eax
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@CJKNCKNK@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0009d	83 c4 08	 add	 esp, 8

; 81   : 
; 82   : 		return FALSE;

  000a0	33 c0		 xor	 eax, eax

; 106  : }

  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
?DeleteUserData@CKanturuBattleUserMng@@QAEHH@Z ENDP	; CKanturuBattleUserMng::DeleteUserData
_TEXT	ENDS
PUBLIC	??_C@_0DK@PJCHICKL@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@ ; `string'
PUBLIC	??_C@_0DM@MIBKFEPM@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@ ; `string'
PUBLIC	?CheckUserState@CKanturuBattleUserMng@@QAEXXZ	; CKanturuBattleUserMng::CheckUserState
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0DK@PJCHICKL@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleuser.h
CONST	SEGMENT
??_C@_0DK@PJCHICKL@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@ DB '['
	DB	' KANTURU ][ BattleUser ] Delete User - Map Move [%s][%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@MIBKFEPM@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@
CONST	SEGMENT
??_C@_0DM@MIBKFEPM@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@ DB '['
	DB	' KANTURU ][ BattleUser ] Delete User - Disconnect [%s][%s]', 00H ; `string'
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleusermng.cpp
CONST	ENDS
;	COMDAT ?CheckUserState@CKanturuBattleUserMng@@QAEXXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
tv230 = -4						; size = 4
?CheckUserState@CKanturuBattleUserMng@@QAEXXZ PROC	; CKanturuBattleUserMng::CheckUserState, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi

; 112  : 	int iIndex;
; 113  : 
; 114  : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  0000a	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  0000d	57		 push	 edi
  0000e	89 45 fc	 mov	 DWORD PTR tv230[ebp], eax
  00011	c7 45 f8 0f 00
	00 00		 mov	 DWORD PTR tv68[ebp], 15	; 0000000fH
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL6@CheckUserS:

; 115  : 	{
; 116  : 		if ( this->m_BattleUser[iCount].IsUseData() == TRUE )

  00020	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  00024	0f 85 88 00 00
	00		 jne	 $LN5@CheckUserS

; 117  : 		{
; 118  : 			iIndex = this->m_BattleUser[iCount].GetIndex();

  0002a	8b 38		 mov	 edi, DWORD PTR [eax]

; 119  : 
; 120  : 			if ( !gObjIsConnected(iIndex))

  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00032	83 c4 04	 add	 esp, 4
  00035	85 c0		 test	 eax, eax
  00037	75 2c		 jne	 SHORT $LN2@CheckUserS

; 121  : 			{
; 122  : 				this->DeleteUserData(iIndex);

  00039	57		 push	 edi
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?DeleteUserData@CKanturuBattleUserMng@@QAEHH@Z ; CKanturuBattleUserMng::DeleteUserData

; 123  : 
; 124  : 				LogAddTD("[ KANTURU ][ BattleUser ] Delete User - Disconnect [%s][%s]",
; 125  : 					gObj[iIndex].AccountID, gObj[iIndex].Name);

  00041	8b c7		 mov	 eax, edi
  00043	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00049	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0004f	8d 50 5d	 lea	 edx, DWORD PTR [eax+93]
  00052	52		 push	 edx
  00053	83 c0 52	 add	 eax, 82			; 00000052H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@MIBKFEPM@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@
  0005c	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@CheckUserS:

; 126  : 			}
; 127  : 
; 128  : 			if ( gObj[iIndex].MapNumber != MAP_INDEX_KANTURU_BOSS &&
; 129  : 				 gObj[iIndex].m_State == 2 &&
; 130  : 				 gObj[iIndex].Live == 1 )

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006a	8b f7		 mov	 esi, edi
  0006c	69 f6 40 27 00
	00		 imul	 esi, 10048		; 00002740H
  00072	80 bc 06 23 01
	00 00 27	 cmp	 BYTE PTR [esi+eax+291], 39 ; 00000027H
  0007a	74 36		 je	 SHORT $LN5@CheckUserS
  0007c	83 bc 06 d0 01
	00 00 02	 cmp	 DWORD PTR [esi+eax+464], 2
  00084	75 2c		 jne	 SHORT $LN5@CheckUserS
  00086	80 7c 06 51 01	 cmp	 BYTE PTR [esi+eax+81], 1
  0008b	75 25		 jne	 SHORT $LN5@CheckUserS

; 131  : 			{
; 132  : 				this->DeleteUserData(iIndex);

  0008d	57		 push	 edi
  0008e	8b cb		 mov	 ecx, ebx
  00090	e8 00 00 00 00	 call	 ?DeleteUserData@CKanturuBattleUserMng@@QAEHH@Z ; CKanturuBattleUserMng::DeleteUserData

; 133  : 
; 134  : 				LogAddTD("[ KANTURU ][ BattleUser ] Delete User - Map Move [%s][%s]",
; 135  : 					gObj[iIndex].AccountID, gObj[iIndex].Name);

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0009a	8d 4c 06 5d	 lea	 ecx, DWORD PTR [esi+eax+93]
  0009e	51		 push	 ecx
  0009f	8d 54 06 52	 lea	 edx, DWORD PTR [esi+eax+82]
  000a3	52		 push	 edx
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@PJCHICKL@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Delete@
  000a9	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@CheckUserS:

; 112  : 	int iIndex;
; 113  : 
; 114  : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  000b2	8b 45 fc	 mov	 eax, DWORD PTR tv230[ebp]
  000b5	83 c0 0c	 add	 eax, 12			; 0000000cH
  000b8	ff 4d f8	 dec	 DWORD PTR tv68[ebp]
  000bb	89 45 fc	 mov	 DWORD PTR tv230[ebp], eax
  000be	0f 85 5c ff ff
	ff		 jne	 $LL6@CheckUserS
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx

; 136  : 			}
; 137  : 		}
; 138  : 	}
; 139  : }

  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
?CheckUserState@CKanturuBattleUserMng@@QAEXXZ ENDP	; CKanturuBattleUserMng::CheckUserState
_TEXT	ENDS
PUBLIC	??_C@_0DG@PLIJPMOP@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5?$FL?$CFs?$FN?$FL?$CF@ ; `string'
PUBLIC	??_C@_0DA@HDNGBBMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5?$FL?$CFs?$FN?$FL?$CF@ ; `string'
PUBLIC	?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z	; CKanturuBattleUserMng::MoveAllUser
EXTRN	?gObjMoveGate@@YAHHH@Z:PROC			; gObjMoveGate
;	COMDAT ??_C@_0DG@PLIJPMOP@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5?$FL?$CFs?$FN?$FL?$CF@
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleuser.h
CONST	SEGMENT
??_C@_0DG@PLIJPMOP@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5?$FL?$CFs?$FN?$FL?$CF@ DB '['
	DB	' KANTURU ][ BattleUser ] [%s][%s] MoveGate Fail (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@HDNGBBMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5?$FL?$CFs?$FN?$FL?$CF@
CONST	SEGMENT
??_C@_0DA@HDNGBBMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5?$FL?$CFs?$FN?$FL?$CF@ DB '['
	DB	' KANTURU ][ BattleUser ] [%s][%s] MoveGate(%d)', 00H ; `string'
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleusermng.cpp
CONST	ENDS
;	COMDAT ?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv155 = -4						; size = 4
_iGateNumber$ = 8					; size = 4
?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z PROC	; CKanturuBattleUserMng::MoveAllUser, COMDAT
; _this$ = ecx

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  : 	int iIndex;
; 146  : 	BOOL bMoveGateSuccess = FALSE;
; 147  : 
; 148  : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  00009	8b 7d 08	 mov	 edi, DWORD PTR _iGateNumber$[ebp]
  0000c	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8d 59 0c	 lea	 ebx, DWORD PTR [ecx+12]
  00012	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR tv155[ebp], 15 ; 0000000fH
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL6@MoveAllUse:

; 149  : 	{
; 150  : 		iIndex = this->m_BattleUser[iCount].GetIndex();
; 151  : 
; 152  : 		if ( this->m_BattleUser[iCount].IsUseData()  )

  00020	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  00023	8b 73 fc	 mov	 esi, DWORD PTR [ebx-4]
  00026	74 6f		 je	 SHORT $LN5@MoveAllUse

; 153  : 		{
; 154  : 			bMoveGateSuccess = gObjMoveGate(iIndex, iGateNumber);

  00028	57		 push	 edi
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate
  0002f	83 c4 08	 add	 esp, 8

; 155  : 
; 156  : 			if ( bMoveGateSuccess == TRUE )

  00032	83 f8 01	 cmp	 eax, 1
  00035	75 26		 jne	 SHORT $LN2@MoveAllUse

; 157  : 			{
; 158  : 				LogAddTD("[ KANTURU ][ BattleUser ] [%s][%s] MoveGate(%d)",
; 159  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, iGateNumber);

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0003c	69 f6 40 27 00
	00		 imul	 esi, 10048		; 00002740H
  00042	03 c6		 add	 eax, esi
  00044	57		 push	 edi
  00045	8d 48 5d	 lea	 ecx, DWORD PTR [eax+93]
  00048	51		 push	 ecx
  00049	83 c0 52	 add	 eax, 82			; 00000052H
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@HDNGBBMJ@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5?$FL?$CFs?$FN?$FL?$CF@
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00058	83 c4 10	 add	 esp, 16			; 00000010H

; 160  : 			}
; 161  : 			else

  0005b	eb 3a		 jmp	 SHORT $LN5@MoveAllUse
$LN2@MoveAllUse:

; 162  : 			{
; 163  : 				this->DeleteUserData(iIndex);

  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ?DeleteUserData@CKanturuBattleUserMng@@QAEHH@Z ; CKanturuBattleUserMng::DeleteUserData

; 164  : 
; 165  : 				LogAddTD( "[ KANTURU ][ BattleUser ] [%s][%s] MoveGate Fail (%d)",
; 166  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, iGateNumber);

  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0006b	8b d6		 mov	 edx, esi
  0006d	69 d2 40 27 00
	00		 imul	 edx, 10048		; 00002740H
  00073	03 c2		 add	 eax, edx
  00075	57		 push	 edi
  00076	8d 48 5d	 lea	 ecx, DWORD PTR [eax+93]
  00079	51		 push	 ecx
  0007a	83 c0 52	 add	 eax, 82			; 00000052H
  0007d	50		 push	 eax
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@PLIJPMOP@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5?$FL?$CFs?$FN?$FL?$CF@
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD

; 167  : 
; 168  : 				gObjMoveGate(iIndex, 137);

  00089	68 89 00 00 00	 push	 137			; 00000089H
  0008e	56		 push	 esi
  0008f	e8 00 00 00 00	 call	 ?gObjMoveGate@@YAHHH@Z	; gObjMoveGate
  00094	83 c4 18	 add	 esp, 24			; 00000018H
$LN5@MoveAllUse:

; 145  : 	int iIndex;
; 146  : 	BOOL bMoveGateSuccess = FALSE;
; 147  : 
; 148  : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  00097	83 c3 0c	 add	 ebx, 12			; 0000000cH
  0009a	ff 4d fc	 dec	 DWORD PTR tv155[ebp]
  0009d	75 81		 jne	 SHORT $LL6@MoveAllUse

; 169  : 			}
; 170  : 		}
; 171  : 	}
; 172  : 
; 173  : 	return TRUE;

  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	b8 01 00 00 00	 mov	 eax, 1
  000a6	5b		 pop	 ebx

; 174  : }

  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?MoveAllUser@CKanturuBattleUserMng@@QAEHH@Z ENDP	; CKanturuBattleUserMng::MoveAllUser
_TEXT	ENDS
PUBLIC	??_C@_0CK@DJKPOCNG@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Set?5Ma@ ; `string'
PUBLIC	?SetMaxUser@CKanturuBattleUserMng@@QAEXH@Z	; CKanturuBattleUserMng::SetMaxUser
;	COMDAT ??_C@_0CK@DJKPOCNG@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Set?5Ma@
CONST	SEGMENT
??_C@_0CK@DJKPOCNG@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Set?5Ma@ DB '['
	DB	' KANTURU ][ BattleUser ] Set Max User:%d', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetMaxUser@CKanturuBattleUserMng@@QAEXH@Z
_TEXT	SEGMENT
_iMaxUser$ = 8						; size = 4
?SetMaxUser@CKanturuBattleUserMng@@QAEXH@Z PROC		; CKanturuBattleUserMng::SetMaxUser, COMDAT
; _this$ = ecx

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 180  : 	this->m_iBattleMaxUser = iMaxUser;

  00003	8b 45 08	 mov	 eax, DWORD PTR _iMaxUser$[ebp]
  00006	89 81 bc 00 00
	00		 mov	 DWORD PTR [ecx+188], eax

; 181  : 
; 182  : 	if ( iMaxUser > MAX_KANTURU_BATTLE_USER )

  0000c	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  0000f	7e 19		 jle	 SHORT $LN1@SetMaxUser

; 183  : 	{
; 184  : 		this->m_iBattleMaxUser = MAX_KANTURU_BATTLE_USER;
; 185  : 
; 186  : 		LogAddTD("[ KANTURU ][ BattleUser ] Set Max User:%d",
; 187  : 			iMaxUser);

  00011	50		 push	 eax
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@DJKPOCNG@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Set?5Ma@
  00017	c7 81 bc 00 00
	00 0f 00 00 00	 mov	 DWORD PTR [ecx+188], 15	; 0000000fH
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00027	83 c4 08	 add	 esp, 8
$LN1@SetMaxUser:

; 188  : 	}
; 189  : }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetMaxUser@CKanturuBattleUserMng@@QAEXH@Z ENDP		; CKanturuBattleUserMng::SetMaxUser
_TEXT	ENDS
PUBLIC	?GetMaxUser@CKanturuBattleUserMng@@QAEHXZ	; CKanturuBattleUserMng::GetMaxUser
; Function compile flags: /Ogtp
;	COMDAT ?GetMaxUser@CKanturuBattleUserMng@@QAEHXZ
_TEXT	SEGMENT
?GetMaxUser@CKanturuBattleUserMng@@QAEHXZ PROC		; CKanturuBattleUserMng::GetMaxUser, COMDAT
; _this$ = ecx

; 195  : 	return this->m_iBattleMaxUser;

  00000	8b 81 bc 00 00
	00		 mov	 eax, DWORD PTR [ecx+188]

; 196  : }

  00006	c3		 ret	 0
?GetMaxUser@CKanturuBattleUserMng@@QAEHXZ ENDP		; CKanturuBattleUserMng::GetMaxUser
_TEXT	ENDS
PUBLIC	?GetUserCount@CKanturuBattleUserMng@@QAEHXZ	; CKanturuBattleUserMng::GetUserCount
; Function compile flags: /Ogtp
;	COMDAT ?GetUserCount@CKanturuBattleUserMng@@QAEHXZ
_TEXT	SEGMENT
?GetUserCount@CKanturuBattleUserMng@@QAEHXZ PROC	; CKanturuBattleUserMng::GetUserCount, COMDAT
; _this$ = ecx

; 201  : 	return this->m_iBattleUserCount;

  00000	8b 81 b8 00 00
	00		 mov	 eax, DWORD PTR [ecx+184]

; 202  : }

  00006	c3		 ret	 0
?GetUserCount@CKanturuBattleUserMng@@QAEHXZ ENDP	; CKanturuBattleUserMng::GetUserCount
_TEXT	ENDS
PUBLIC	?IsEmpty@CKanturuBattleUserMng@@QAEHXZ		; CKanturuBattleUserMng::IsEmpty
; Function compile flags: /Ogtp
;	COMDAT ?IsEmpty@CKanturuBattleUserMng@@QAEHXZ
_TEXT	SEGMENT
?IsEmpty@CKanturuBattleUserMng@@QAEHXZ PROC		; CKanturuBattleUserMng::IsEmpty, COMDAT
; _this$ = ecx

; 207  : 	if ( this->m_iBattleUserCount <= 0 )

  00000	33 c0		 xor	 eax, eax
  00002	39 81 b8 00 00
	00		 cmp	 DWORD PTR [ecx+184], eax
  00008	0f 9e c0	 setle	 al

; 208  : 	{
; 209  : 		return TRUE;
; 210  : 	}
; 211  : 
; 212  : 	return FALSE;
; 213  : }

  0000b	c3		 ret	 0
?IsEmpty@CKanturuBattleUserMng@@QAEHXZ ENDP		; CKanturuBattleUserMng::IsEmpty
_TEXT	ENDS
PUBLIC	?IsOverMaxUser@CKanturuBattleUserMng@@QAEHXZ	; CKanturuBattleUserMng::IsOverMaxUser
; Function compile flags: /Ogtp
;	COMDAT ?IsOverMaxUser@CKanturuBattleUserMng@@QAEHXZ
_TEXT	SEGMENT
?IsOverMaxUser@CKanturuBattleUserMng@@QAEHXZ PROC	; CKanturuBattleUserMng::IsOverMaxUser, COMDAT
; _this$ = ecx

; 218  : 	if ( this->m_iBattleUserCount >=  MAX_KANTURU_BATTLE_USER )

  00000	33 c0		 xor	 eax, eax
  00002	83 b9 b8 00 00
	00 0f		 cmp	 DWORD PTR [ecx+184], 15	; 0000000fH
  00009	0f 9d c0	 setge	 al

; 219  : 	{
; 220  : 		return TRUE;
; 221  : 	}
; 222  : 
; 223  : 	return FALSE;
; 224  : }

  0000c	c3		 ret	 0
?IsOverMaxUser@CKanturuBattleUserMng@@QAEHXZ ENDP	; CKanturuBattleUserMng::IsOverMaxUser
_TEXT	ENDS
PUBLIC	??_C@_0FD@KGPMFPMP@?$FL?5KANTURU?5?$FN?$FL?5BATTLE?5WINNER?5?$FN?5?$FL?$CFd@ ; `string'
PUBLIC	__real@408f400000000000
PUBLIC	?LogBattleWinnerUserInfo@CKanturuBattleUserMng@@QAEXEH@Z ; CKanturuBattleUserMng::LogBattleWinnerUserInfo
EXTRN	?SendDataKanturuTimeAttackEvent@CKanturuUtil@@QAEXHEH@Z:PROC ; CKanturuUtil::SendDataKanturuTimeAttackEvent
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0FD@KGPMFPMP@?$FL?5KANTURU?5?$FN?$FL?5BATTLE?5WINNER?5?$FN?5?$FL?$CFd@
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleuser.h
CONST	SEGMENT
??_C@_0FD@KGPMFPMP@?$FL?5KANTURU?5?$FN?$FL?5BATTLE?5WINNER?5?$FN?5?$FL?$CFd@ DB '['
	DB	' KANTURU ][ BATTLE WINNER ] [%d/ElapsedTime:%0.3f] [%s][%s] M'
	DB	'apNumber[%d]-(%d/%d)', 00H			; `string'
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleusermng.cpp
CONST	ENDS
;	COMDAT ?LogBattleWinnerUserInfo@CKanturuBattleUserMng@@QAEXEH@Z
_TEXT	SEGMENT
tv147 = -4						; size = 4
_btFlag$ = 8						; size = 1
_fTime$ = 12						; size = 4
_iElapsedTime$ = 12					; size = 4
?LogBattleWinnerUserInfo@CKanturuBattleUserMng@@QAEXEH@Z PROC ; CKanturuBattleUserMng::LogBattleWinnerUserInfo, COMDAT
; _this$ = ecx

; 229  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 230  : 	int iIndex = -1;
; 231  : 	float fTime = iElapsedTime / 1000.0f;

  00004	db 45 0c	 fild	 DWORD PTR _iElapsedTime$[ebp]
  00007	53		 push	 ebx
  00008	8b 5d 08	 mov	 ebx, DWORD PTR _btFlag$[ebp]
  0000b	56		 push	 esi
  0000c	dc 35 00 00 00
	00		 fdiv	 QWORD PTR __real@408f400000000000
  00012	57		 push	 edi
  00013	8d 79 08	 lea	 edi, DWORD PTR [ecx+8]
  00016	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR tv147[ebp], 15 ; 0000000fH
  0001d	d9 5d 0c	 fstp	 DWORD PTR _fTime$[ebp]
$LL4@LogBattleW:

; 234  : 	{
; 235  : 		if ( this->m_BattleUser[iCount].IsUseData() == TRUE )

  00020	83 7f 04 01	 cmp	 DWORD PTR [edi+4], 1
  00024	75 60		 jne	 SHORT $LN3@LogBattleW

; 236  : 		{
; 237  : 			iIndex = this->m_BattleUser[iCount].GetIndex();

  00026	8b 37		 mov	 esi, DWORD PTR [edi]

; 238  : 			
; 239  : 			LogAddTD("[ KANTURU ][ BATTLE WINNER ] [%d/ElapsedTime:%0.3f] [%s][%s] MapNumber[%d]-(%d/%d)",
; 240  : 				btFlag, fTime, gObj[iIndex].AccountID, gObj[iIndex].Name,
; 241  : 				gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  00028	d9 45 0c	 fld	 DWORD PTR _fTime$[ebp]
  0002b	8b c6		 mov	 eax, esi
  0002d	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00033	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00039	0f b6 90 21 01
	00 00		 movzx	 edx, BYTE PTR [eax+289]
  00040	0f b6 88 20 01
	00 00		 movzx	 ecx, BYTE PTR [eax+288]
  00047	52		 push	 edx
  00048	0f b6 90 23 01
	00 00		 movzx	 edx, BYTE PTR [eax+291]
  0004f	51		 push	 ecx
  00050	52		 push	 edx
  00051	8d 48 5d	 lea	 ecx, DWORD PTR [eax+93]
  00054	51		 push	 ecx
  00055	83 c0 52	 add	 eax, 82			; 00000052H
  00058	50		 push	 eax
  00059	83 ec 08	 sub	 esp, 8
  0005c	0f b6 d3	 movzx	 edx, bl
  0005f	dd 1c 24	 fstp	 QWORD PTR [esp]
  00062	52		 push	 edx
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@KGPMFPMP@?$FL?5KANTURU?5?$FN?$FL?5BATTLE?5WINNER?5?$FN?5?$FL?$CFd@
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0006e	83 c4 24	 add	 esp, 36			; 00000024H

; 242  : 
; 243  : 			KANTURU_UTIL.SendDataKanturuTimeAttackEvent(iIndex, btFlag,(int)fTime);

  00071	d9 45 0c	 fld	 DWORD PTR _fTime$[ebp]
  00074	e8 00 00 00 00	 call	 __ftol2_sse
  00079	50		 push	 eax
  0007a	53		 push	 ebx
  0007b	56		 push	 esi
  0007c	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00081	e8 00 00 00 00	 call	 ?SendDataKanturuTimeAttackEvent@CKanturuUtil@@QAEXHEH@Z ; CKanturuUtil::SendDataKanturuTimeAttackEvent
$LN3@LogBattleW:

; 232  : 
; 233  : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  00086	83 c7 0c	 add	 edi, 12			; 0000000cH
  00089	ff 4d fc	 dec	 DWORD PTR tv147[ebp]
  0008c	75 92		 jne	 SHORT $LL4@LogBattleW
  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx

; 244  : 		}
; 245  : 	}
; 246  : }

  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 08 00	 ret	 8
?LogBattleWinnerUserInfo@CKanturuBattleUserMng@@QAEXEH@Z ENDP ; CKanturuBattleUserMng::LogBattleWinnerUserInfo
_TEXT	ENDS
PUBLIC	??0CKanturuBattleUser@@QAE@XZ			; CKanturuBattleUser::CKanturuBattleUser
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleuser.h
;	COMDAT ??0CKanturuBattleUser@@QAE@XZ
_TEXT	SEGMENT
??0CKanturuBattleUser@@QAE@XZ PROC			; CKanturuBattleUser::CKanturuBattleUser, COMDAT
; _this$ = ecx

; 9    : 	CKanturuBattleUser()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CKanturuBattleUser@@6B@

; 10   : 	{
; 11   : 		this->ResetData();

  00008	c7 40 04 ff ff
	ff ff		 mov	 DWORD PTR [eax+4], -1
  0000f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 12   : 	}

  00016	c3		 ret	 0
??0CKanturuBattleUser@@QAE@XZ ENDP			; CKanturuBattleUser::CKanturuBattleUser
_TEXT	ENDS
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_EOBJECTSTRUCT@@QAEPAXI@Z$0
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_EOBJECTSTRUCT@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	8a 5d 08	 mov	 bl, BYTE PTR ___flags$[ebp]
  0002e	f6 c3 02	 test	 bl, 2
  00031	74 3b		 je	 SHORT $LN3@vector
  00033	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  00036	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	50		 push	 eax
  0003f	68 40 27 00 00	 push	 10048			; 00002740H
  00044	56		 push	 esi
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0004a	f6 c3 01	 test	 bl, 1
  0004d	74 09		 je	 SHORT $LN2@vector
  0004f	57		 push	 edi
  00050	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00055	83 c4 04	 add	 esp, 4
$LN2@vector:
  00058	8b c7		 mov	 eax, edi
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
$LN3@vector:
  0006e	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007b	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  00080	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00092	f6 c3 01	 test	 bl, 1
  00095	74 09		 je	 SHORT $LN1@vector
  00097	56		 push	 esi
  00098	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0009d	83 c4 04	 add	 esp, 4
$LN1@vector:
  000a0	8b c6		 mov	 eax, esi
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_EOBJECTSTRUCT@@QAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 0c 16 00
	00		 add	 ecx, 5644		; 0000160cH
  00009	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GCKanturuBattleUserMng@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCKanturuBattleUserMng@@UAEPAXI@Z PROC		; CKanturuBattleUserMng::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CKanturuBattleUserMng@@UAE@XZ ; CKanturuBattleUserMng::~CKanturuBattleUserMng
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar@2:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCKanturuBattleUserMng@@UAEPAXI@Z ENDP		; CKanturuBattleUserMng::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?ResetAllData@CKanturuBattleUserMng@@QAEXXZ	; CKanturuBattleUserMng::ResetAllData
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleusermng.cpp
;	COMDAT ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ
_TEXT	SEGMENT
?ResetAllData@CKanturuBattleUserMng@@QAEXXZ PROC	; CKanturuBattleUserMng::ResetAllData, COMDAT
; _this$ = ecx

; 30   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 31   : 	this->m_iBattleUserCount = 0;
; 32   : 	this->SetMaxUser(MAX_KANTURU_BATTLE_USER);

  00003	6a 0f		 push	 15			; 0000000fH
  00005	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0
  0000f	e8 00 00 00 00	 call	 ?SetMaxUser@CKanturuBattleUserMng@@QAEXH@Z ; CKanturuBattleUserMng::SetMaxUser
  00014	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00017	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0001c	83 ca ff	 or	 edx, -1
  0001f	5e		 pop	 esi
$LL3@ResetAllDa:

; 33   : 
; 34   : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)
; 35   : 	{
; 36   : 		this->m_BattleUser[iCount].ResetData();

  00020	89 50 fc	 mov	 DWORD PTR [eax-4], edx
  00023	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00029	83 c0 0c	 add	 eax, 12			; 0000000cH
  0002c	49		 dec	 ecx
  0002d	75 f1		 jne	 SHORT $LL3@ResetAllDa

; 37   : 	}
; 38   : }

  0002f	c3		 ret	 0
?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ENDP	; CKanturuBattleUserMng::ResetAllData
_TEXT	ENDS
PUBLIC	??_C@_0EB@OJFLABFJ@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Add?5Us@ ; `string'
PUBLIC	??_C@_0ED@OOIHFICL@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Add?5Us@ ; `string'
PUBLIC	?AddUserData@CKanturuBattleUserMng@@QAEHH@Z	; CKanturuBattleUserMng::AddUserData
;	COMDAT ??_C@_0EB@OJFLABFJ@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Add?5Us@
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleuser.h
CONST	SEGMENT
??_C@_0EB@OJFLABFJ@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Add?5Us@ DB '['
	DB	' KANTURU ][ BattleUser ] Add User Fail - Over Max User [%s][%'
	DB	's]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@OOIHFICL@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Add?5Us@
CONST	SEGMENT
??_C@_0ED@OOIHFICL@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Add?5Us@ DB '['
	DB	' KANTURU ][ BattleUser ] Add User Fail - Disconnect User [%s]'
	DB	'[%s]', 00H					; `string'
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\kanturubattleusermng.cpp
CONST	ENDS
;	COMDAT ?AddUserData@CKanturuBattleUserMng@@QAEHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?AddUserData@CKanturuBattleUserMng@@QAEHH@Z PROC	; CKanturuBattleUserMng::AddUserData, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 44   : 	if ( !gObjIsConnected(iIndex))

  00004	8b 75 08	 mov	 esi, DWORD PTR _iIndex$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	8b f9		 mov	 edi, ecx
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 2b		 jne	 SHORT $LN6@AddUserDat

; 45   : 	{
; 46   : 		LogAddTD("[ KANTURU ][ BattleUser ] Add User Fail - Disconnect User [%s][%s]",
; 47   : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001c	69 f6 40 27 00
	00		 imul	 esi, 10048		; 00002740H
  00022	03 c6		 add	 eax, esi
  00024	8d 48 5d	 lea	 ecx, DWORD PTR [eax+93]
  00027	51		 push	 ecx
  00028	83 c0 52	 add	 eax, 82			; 00000052H
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@OOIHFICL@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Add?5Us@

; 53   : 	{
; 54   : 		LogAddTD("[ KANTURU ][ BattleUser ] Add User Fail - Over Max User [%s][%s]",
; 55   : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  00031	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	5f		 pop	 edi

; 66   : 			
; 67   : 			return TRUE;
; 68   : 		}
; 69   : 	}
; 70   : 
; 71   : 	return FALSE;

  0003b	33 c0		 xor	 eax, eax
  0003d	5e		 pop	 esi

; 72   : }

  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
$LN6@AddUserDat:

; 48   : 
; 49   : 		return FALSE;
; 50   : 	}
; 51   : 
; 52   : 	if ( this->IsOverMaxUser() )

  00042	8b cf		 mov	 ecx, edi
  00044	e8 00 00 00 00	 call	 ?IsOverMaxUser@CKanturuBattleUserMng@@QAEHXZ ; CKanturuBattleUserMng::IsOverMaxUser
  00049	85 c0		 test	 eax, eax
  0004b	74 2d		 je	 SHORT $LN5@AddUserDat

; 53   : 	{
; 54   : 		LogAddTD("[ KANTURU ][ BattleUser ] Add User Fail - Over Max User [%s][%s]",
; 55   : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  0004d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00053	69 f6 40 27 00
	00		 imul	 esi, 10048		; 00002740H
  00059	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  0005c	8d 48 5d	 lea	 ecx, DWORD PTR [eax+93]
  0005f	51		 push	 ecx
  00060	83 c0 52	 add	 eax, 82			; 00000052H
  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@OJFLABFJ@?$FL?5KANTURU?5?$FN?$FL?5BattleUser?5?$FN?5Add?5Us@
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR ?LogAddTD@@3P6AXPADZZA ; LogAddTD
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00072	5f		 pop	 edi

; 66   : 			
; 67   : 			return TRUE;
; 68   : 		}
; 69   : 	}
; 70   : 
; 71   : 	return FALSE;

  00073	33 c0		 xor	 eax, eax
  00075	5e		 pop	 esi

; 72   : }

  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
$LN5@AddUserDat:

; 56   : 
; 57   : 		return FALSE;
; 58   : 	}
; 59   : 
; 60   : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  0007a	33 c9		 xor	 ecx, ecx
  0007c	8d 57 0c	 lea	 edx, DWORD PTR [edi+12]
  0007f	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
$LL4@AddUserDat:

; 61   : 	{
; 62   : 		if ( this->m_BattleUser[iCount].IsUseData() == FALSE )

  00082	83 3a 00	 cmp	 DWORD PTR [edx], 0
  00085	74 12		 je	 SHORT $LN14@AddUserDat

; 56   : 
; 57   : 		return FALSE;
; 58   : 	}
; 59   : 
; 60   : 	for ( int iCount=0;iCount<MAX_KANTURU_BATTLE_USER;iCount++)

  00087	03 c8		 add	 ecx, eax
  00089	83 c2 0c	 add	 edx, 12			; 0000000cH
  0008c	83 f9 0f	 cmp	 ecx, 15			; 0000000fH
  0008f	7c f1		 jl	 SHORT $LL4@AddUserDat

; 66   : 			
; 67   : 			return TRUE;
; 68   : 		}
; 69   : 	}
; 70   : 
; 71   : 	return FALSE;

  00091	5f		 pop	 edi
  00092	33 c0		 xor	 eax, eax
  00094	5e		 pop	 esi

; 72   : }

  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
$LN14@AddUserDat:

; 63   : 		{
; 64   : 			this->m_BattleUser[iCount].SetIndex(iIndex);

  00099	8d 14 49	 lea	 edx, DWORD PTR [ecx+ecx*2]
  0009c	8d 4c 97 04	 lea	 ecx, DWORD PTR [edi+edx*4+4]
  000a0	89 71 04	 mov	 DWORD PTR [ecx+4], esi
  000a3	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 65   : 			this->m_iBattleUserCount++;

  000a6	01 87 b8 00 00
	00		 add	 DWORD PTR [edi+184], eax
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi

; 72   : }

  000ae	5d		 pop	 ebp
  000af	c2 04 00	 ret	 4
?AddUserData@CKanturuBattleUserMng@@QAEHH@Z ENDP	; CKanturuBattleUserMng::AddUserData
_TEXT	ENDS
PUBLIC	??0CKanturuBattleUserMng@@QAE@XZ		; CKanturuBattleUserMng::CKanturuBattleUserMng
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CKanturuBattleUserMng@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CKanturuBattleUserMng@@QAE@XZ$0
__ehfuncinfo$??0CKanturuBattleUserMng@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CKanturuBattleUserMng@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0CKanturuBattleUserMng@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CKanturuBattleUserMng@@QAE@XZ PROC			; CKanturuBattleUserMng::CKanturuBattleUserMng, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CKanturuBattleUserMng@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	68 00 00 00 00	 push	 OFFSET ??1CKanturuBattleUser@@UAE@XZ ; CKanturuBattleUser::~CKanturuBattleUser
  0002e	68 00 00 00 00	 push	 OFFSET ??0CKanturuBattleUser@@QAE@XZ ; CKanturuBattleUser::CKanturuBattleUser
  00033	6a 0f		 push	 15			; 0000000fH
  00035	6a 0c		 push	 12			; 0000000cH
  00037	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0003a	50		 push	 eax
  0003b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CKanturuBattleUserMng@@6B@
  00041	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z

; 19   : 	this->ResetAllData();

  00046	8b ce		 mov	 ecx, esi
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004f	e8 00 00 00 00	 call	 ?ResetAllData@CKanturuBattleUserMng@@QAEXXZ ; CKanturuBattleUserMng::ResetAllData

; 20   : }

  00054	8b c6		 mov	 eax, esi
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CKanturuBattleUserMng@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1CKanturuBattleUser@@UAE@XZ ; CKanturuBattleUser::~CKanturuBattleUser
  00005	6a 0f		 push	 15			; 0000000fH
  00007	6a 0c		 push	 12			; 0000000cH
  00009	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00015	c3		 ret	 0
__ehhandler$??0CKanturuBattleUserMng@@QAE@XZ:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CKanturuBattleUserMng@@QAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CKanturuBattleUserMng@@QAE@XZ ENDP			; CKanturuBattleUserMng::CKanturuBattleUserMng
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_KanturuBattleUserMng@@YAXXZ
text$yc	SEGMENT
??__Eg_KanturuBattleUserMng@@YAXXZ PROC			; `dynamic initializer for 'g_KanturuBattleUserMng'', COMDAT

; 11   : CKanturuBattleUserMng g_KanturuBattleUserMng;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00005	e8 00 00 00 00	 call	 ??0CKanturuBattleUserMng@@QAE@XZ ; CKanturuBattleUserMng::CKanturuBattleUserMng
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_KanturuBattleUserMng@@YAXXZ ; `dynamic atexit destructor for 'g_KanturuBattleUserMng''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_KanturuBattleUserMng@@YAXXZ ENDP			; `dynamic initializer for 'g_KanturuBattleUserMng''
text$yc	ENDS
EXTRN	??0CKanturuUtil@@QAE@XZ:PROC			; CKanturuUtil::CKanturuUtil
; Function compile flags: /Ogtp
;	COMDAT ??__EKANTURU_UTIL@@YAXXZ
text$yc	SEGMENT
??__EKANTURU_UTIL@@YAXXZ PROC				; `dynamic initializer for 'KANTURU_UTIL'', COMDAT

; 12   : static CKanturuUtil KANTURU_UTIL;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00005	e8 00 00 00 00	 call	 ??0CKanturuUtil@@QAE@XZ	; CKanturuUtil::CKanturuUtil
  0000a	68 00 00 00 00	 push	 OFFSET ??__FKANTURU_UTIL@@YAXXZ ; `dynamic atexit destructor for 'KANTURU_UTIL''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EKANTURU_UTIL@@YAXXZ ENDP				; `dynamic initializer for 'KANTURU_UTIL''
text$yc	ENDS
EXTRN	??1CKanturuUtil@@UAE@XZ:PROC			; CKanturuUtil::~CKanturuUtil
; Function compile flags: /Ogtp
;	COMDAT ??__FKANTURU_UTIL@@YAXXZ
text$yd	SEGMENT
??__FKANTURU_UTIL@@YAXXZ PROC				; `dynamic atexit destructor for 'KANTURU_UTIL'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET _KANTURU_UTIL
  00005	e9 00 00 00 00	 jmp	 ??1CKanturuUtil@@UAE@XZ	; CKanturuUtil::~CKanturuUtil
??__FKANTURU_UTIL@@YAXXZ ENDP				; `dynamic atexit destructor for 'KANTURU_UTIL''
; Function compile flags: /Ogtp
text$yd	ENDS
;	COMDAT ??__Fg_KanturuBattleUserMng@@YAXXZ
text$yd	SEGMENT
??__Fg_KanturuBattleUserMng@@YAXXZ PROC			; `dynamic atexit destructor for 'g_KanturuBattleUserMng'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
  00005	e9 00 00 00 00	 jmp	 ??1CKanturuBattleUserMng@@UAE@XZ ; CKanturuBattleUserMng::~CKanturuBattleUserMng
??__Fg_KanturuBattleUserMng@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_KanturuBattleUserMng''
text$yd	ENDS
PUBLIC	?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A ; g_KanturuBattleUserMng
_BSS	SEGMENT
_KANTURU_UTIL DD 01H DUP (?)
?g_KanturuBattleUserMng@@3VCKanturuBattleUserMng@@A DB 0c0H DUP (?) ; g_KanturuBattleUserMng
_BSS	ENDS
CRT$XCU	SEGMENT
_g_KanturuBattleUserMng$initializer$ DD FLAT:??__Eg_KanturuBattleUserMng@@YAXXZ
_KANTURU_UTIL$initializer$ DD FLAT:??__EKANTURU_UTIL@@YAXXZ
CRT$XCU	ENDS
END
