; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\muserver_dev\development\MU-S8EP2-Repack\GameServer\Source\GuildMatch.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BLOCKSIZE@?$FixedBlockSize@$07@CryptoPP@@2HB	; CryptoPP::FixedBlockSize<8>::BLOCKSIZE
PUBLIC	?KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<8,4,0>::KEYLENGTH
PUBLIC	?MIN_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<8,4,0>::MIN_KEYLENGTH
PUBLIC	?MAX_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<8,4,0>::MAX_KEYLENGTH
PUBLIC	?DEFAULT_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<8,4,0>::DEFAULT_KEYLENGTH
PUBLIC	?IV_REQUIREMENT@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<8,4,0>::IV_REQUIREMENT
PUBLIC	?IV_LENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<8,4,0>::IV_LENGTH
PUBLIC	?KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<16,4,0>::KEYLENGTH
PUBLIC	?MIN_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<16,4,0>::MIN_KEYLENGTH
PUBLIC	?MAX_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<16,4,0>::MAX_KEYLENGTH
PUBLIC	?DEFAULT_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<16,4,0>::DEFAULT_KEYLENGTH
PUBLIC	?IV_REQUIREMENT@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<16,4,0>::IV_REQUIREMENT
PUBLIC	?IV_LENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<16,4,0>::IV_LENGTH
PUBLIC	?KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<24,4,0>::KEYLENGTH
PUBLIC	?MIN_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<24,4,0>::MIN_KEYLENGTH
PUBLIC	?MAX_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<24,4,0>::MAX_KEYLENGTH
PUBLIC	?DEFAULT_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<24,4,0>::DEFAULT_KEYLENGTH
PUBLIC	?IV_REQUIREMENT@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<24,4,0>::IV_REQUIREMENT
PUBLIC	?IV_LENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB ; CryptoPP::FixedKeyLength<24,4,0>::IV_LENGTH
;	COMDAT ?IV_LENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?IV_LENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB DD 00H ; CryptoPP::FixedKeyLength<24,4,0>::IV_LENGTH
CONST	ENDS
;	COMDAT ?IV_REQUIREMENT@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?IV_REQUIREMENT@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB DD 04H ; CryptoPP::FixedKeyLength<24,4,0>::IV_REQUIREMENT
CONST	ENDS
;	COMDAT ?DEFAULT_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?DEFAULT_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB DD 018H ; CryptoPP::FixedKeyLength<24,4,0>::DEFAULT_KEYLENGTH
CONST	ENDS
;	COMDAT ?MAX_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?MAX_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB DD 018H ; CryptoPP::FixedKeyLength<24,4,0>::MAX_KEYLENGTH
CONST	ENDS
;	COMDAT ?MIN_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?MIN_KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB DD 018H ; CryptoPP::FixedKeyLength<24,4,0>::MIN_KEYLENGTH
CONST	ENDS
;	COMDAT ?KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?KEYLENGTH@?$FixedKeyLength@$0BI@$03$0A@@CryptoPP@@2HB DD 018H ; CryptoPP::FixedKeyLength<24,4,0>::KEYLENGTH
CONST	ENDS
;	COMDAT ?IV_LENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?IV_LENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB DD 00H ; CryptoPP::FixedKeyLength<16,4,0>::IV_LENGTH
CONST	ENDS
;	COMDAT ?IV_REQUIREMENT@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?IV_REQUIREMENT@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB DD 04H ; CryptoPP::FixedKeyLength<16,4,0>::IV_REQUIREMENT
CONST	ENDS
;	COMDAT ?DEFAULT_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?DEFAULT_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB DD 010H ; CryptoPP::FixedKeyLength<16,4,0>::DEFAULT_KEYLENGTH
CONST	ENDS
;	COMDAT ?MAX_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?MAX_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB DD 010H ; CryptoPP::FixedKeyLength<16,4,0>::MAX_KEYLENGTH
CONST	ENDS
;	COMDAT ?MIN_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?MIN_KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB DD 010H ; CryptoPP::FixedKeyLength<16,4,0>::MIN_KEYLENGTH
CONST	ENDS
;	COMDAT ?KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?KEYLENGTH@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@2HB DD 010H ; CryptoPP::FixedKeyLength<16,4,0>::KEYLENGTH
CONST	ENDS
;	COMDAT ?IV_LENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?IV_LENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB DD 00H ; CryptoPP::FixedKeyLength<8,4,0>::IV_LENGTH
CONST	ENDS
;	COMDAT ?IV_REQUIREMENT@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?IV_REQUIREMENT@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB DD 04H ; CryptoPP::FixedKeyLength<8,4,0>::IV_REQUIREMENT
CONST	ENDS
;	COMDAT ?DEFAULT_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?DEFAULT_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB DD 08H ; CryptoPP::FixedKeyLength<8,4,0>::DEFAULT_KEYLENGTH
CONST	ENDS
;	COMDAT ?MAX_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?MAX_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB DD 08H ; CryptoPP::FixedKeyLength<8,4,0>::MAX_KEYLENGTH
CONST	ENDS
;	COMDAT ?MIN_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?MIN_KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB DD 08H ; CryptoPP::FixedKeyLength<8,4,0>::MIN_KEYLENGTH
CONST	ENDS
;	COMDAT ?KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB
CONST	SEGMENT
?KEYLENGTH@?$FixedKeyLength@$07$03$0A@@CryptoPP@@2HB DD 08H ; CryptoPP::FixedKeyLength<8,4,0>::KEYLENGTH
CONST	ENDS
;	COMDAT ?BLOCKSIZE@?$FixedBlockSize@$07@CryptoPP@@2HB
CONST	SEGMENT
?BLOCKSIZE@?$FixedBlockSize@$07@CryptoPP@@2HB DD 08H	; CryptoPP::FixedBlockSize<8>::BLOCKSIZE
CONST	ENDS
PUBLIC	??1OBJECTSTRUCT@@QAE@XZ				; OBJECTSTRUCT::~OBJECTSTRUCT
EXTRN	??1CSkillDelay@@UAE@XZ:PROC			; CSkillDelay::~CSkillDelay
EXTRN	??1TMonsterAIAgro@@UAE@XZ:PROC			; TMonsterAIAgro::~TMonsterAIAgro
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1OBJECTSTRUCT@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1OBJECTSTRUCT@@QAE@XZ$0
__ehfuncinfo$??1OBJECTSTRUCT@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1OBJECTSTRUCT@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1OBJECTSTRUCT@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1OBJECTSTRUCT@@QAE@XZ PROC				; OBJECTSTRUCT::~OBJECTSTRUCT, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1OBJECTSTRUCT@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  0002f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00036	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  0003b	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00041	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00048	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1OBJECTSTRUCT@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 0c 16 00
	00		 add	 ecx, 5644		; 0000160cH
  00009	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
__ehhandler$??1OBJECTSTRUCT@@QAE@XZ:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1OBJECTSTRUCT@@QAE@XZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1OBJECTSTRUCT@@QAE@XZ ENDP				; OBJECTSTRUCT::~OBJECTSTRUCT
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqOfferList@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERLIST@@@Z ; GuildMatch::CGReqOfferList
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:DWORD		; gObj
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\guildmatch.cpp
;	COMDAT ?CGReqOfferList@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERLIST@@@Z
_TEXT	SEGMENT
_lpRequest$ = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqOfferList@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERLIST@@@Z PROC ; GuildMatch::CGReqOfferList, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _UserIndex$[ebp]
  00013	8b 55 0c	 mov	 edx, DWORD PTR _lpData$[ebp]

; 26   : 	if(		!OBJMAX_RANGE(UserIndex) 
; 27   : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00016	85 c9		 test	 ecx, ecx
  00018	78 55		 js	 SHORT $LN1@CGReqOffer
  0001a	33 c0		 xor	 eax, eax
  0001c	81 f9 eb 2c 00
	00		 cmp	 ecx, 11499		; 00002cebH
  00022	0f 9e c0	 setle	 al
  00025	85 c0		 test	 eax, eax
  00027	74 46		 je	 SHORT $LN1@CGReqOffer
  00029	8b c1		 mov	 eax, ecx
  0002b	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00031	56		 push	 esi
  00032	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00038	83 7c 30 04 03	 cmp	 DWORD PTR [eax+esi+4], 3
  0003d	5e		 pop	 esi
  0003e	75 2f		 jne	 SHORT $LN1@CGReqOffer

; 28   : 	{
; 29   : 		return;
; 30   : 	}
; 31   : 	// ----
; 32   : 	GUILDMATCH_GDREQ_OFFERLIST lpRequest = { 0 };
; 33   : 	lpRequest.h.c			= 0xC1;
; 34   : 	lpRequest.h.headcode	= 0xED;
; 35   : 	lpRequest.h.subcode		= 0x00;
; 36   : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_OFFERLIST);
; 37   : 	lpRequest.CurrentPage	= lpData->CurrentPage;

  00040	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00043	33 c0		 xor	 eax, eax
  00045	89 45 f1	 mov	 DWORD PTR _lpRequest$[ebp+1], eax
  00048	89 45 f5	 mov	 DWORD PTR _lpRequest$[ebp+5], eax
  0004b	66 89 45 f9	 mov	 WORD PTR _lpRequest$[ebp+9], ax
  0004f	88 45 fb	 mov	 BYTE PTR _lpRequest$[ebp+11], al

; 38   : 	lpRequest.UserIndex		= UserIndex;
; 39   : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(lpRequest));

  00052	6a 0c		 push	 12			; 0000000cH
  00054	8d 45 f0	 lea	 eax, DWORD PTR _lpRequest$[ebp]
  00057	89 4d f4	 mov	 DWORD PTR _lpRequest$[ebp+4], ecx
  0005a	50		 push	 eax
  0005b	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00060	c7 45 f0 c1 0c
	ed 00		 mov	 DWORD PTR _lpRequest$[ebp], 15535297 ; 00ed0cc1H
  00067	89 55 f8	 mov	 DWORD PTR _lpRequest$[ebp+8], edx
  0006a	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN1@CGReqOffer:

; 40   : }

  0006f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00072	33 cd		 xor	 ecx, ebp
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 08 00	 ret	 8
?CGReqOfferList@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERLIST@@@Z ENDP ; GuildMatch::CGReqOfferList
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqOfferListByFilter@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERLISTFILTER@@@Z ; GuildMatch::CGReqOfferListByFilter
; Function compile flags: /Ogtp
;	COMDAT ?CGReqOfferListByFilter@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERLISTFILTER@@@Z
_TEXT	SEGMENT
_lpRequest$ = -28					; size = 23
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqOfferListByFilter@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERLISTFILTER@@@Z PROC ; GuildMatch::CGReqOfferListByFilter, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _UserIndex$[ebp]
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _lpData$[ebp]

; 45   : 	if(		!OBJMAX_RANGE(UserIndex) 
; 46   : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00016	85 d2		 test	 edx, edx
  00018	78 75		 js	 SHORT $LN1@CGReqOffer@2
  0001a	33 c0		 xor	 eax, eax
  0001c	81 fa eb 2c 00
	00		 cmp	 edx, 11499		; 00002cebH
  00022	0f 9e c0	 setle	 al
  00025	85 c0		 test	 eax, eax
  00027	74 66		 je	 SHORT $LN1@CGReqOffer@2
  00029	8b c2		 mov	 eax, edx
  0002b	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00031	56		 push	 esi
  00032	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00038	83 7c 30 04 03	 cmp	 DWORD PTR [eax+esi+4], 3
  0003d	5e		 pop	 esi
  0003e	75 4f		 jne	 SHORT $LN1@CGReqOffer@2

; 47   : 	{
; 48   : 		return;
; 49   : 	}
; 50   : 	// ----
; 51   : 	GUILDMATCH_GDREQ_OFFERLISTFILTER lpRequest = { 0 };

  00040	33 c0		 xor	 eax, eax
  00042	89 45 e5	 mov	 DWORD PTR _lpRequest$[ebp+1], eax
  00045	89 45 e9	 mov	 DWORD PTR _lpRequest$[ebp+5], eax
  00048	89 45 ed	 mov	 DWORD PTR _lpRequest$[ebp+9], eax
  0004b	89 45 f1	 mov	 DWORD PTR _lpRequest$[ebp+13], eax
  0004e	89 45 f5	 mov	 DWORD PTR _lpRequest$[ebp+17], eax
  00051	66 89 45 f9	 mov	 WORD PTR _lpRequest$[ebp+21], ax

; 52   : 	lpRequest.h.c			= 0xC1;
; 53   : 	lpRequest.h.headcode	= 0xED;
; 54   : 	lpRequest.h.subcode		= 0x01;
; 55   : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_OFFERLISTFILTER);
; 56   : 	lpRequest.CurrentPage	= lpData->CurrentPage;

  00055	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00058	89 45 ec	 mov	 DWORD PTR _lpRequest$[ebp+8], eax

; 57   : 	lpRequest.UserIndex		= UserIndex;
; 58   : 	memcpy(lpRequest.KeyWord, lpData->KeyWord, sizeof(lpRequest.KeyWord));

  0005b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0005e	89 55 e8	 mov	 DWORD PTR _lpRequest$[ebp+4], edx
  00061	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00064	89 55 f0	 mov	 DWORD PTR _lpRequest$[ebp+12], edx
  00067	66 8b 51 10	 mov	 dx, WORD PTR [ecx+16]
  0006b	89 45 f4	 mov	 DWORD PTR _lpRequest$[ebp+16], eax
  0006e	8a 41 12	 mov	 al, BYTE PTR [ecx+18]

; 59   : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(lpRequest));

  00071	6a 17		 push	 23			; 00000017H
  00073	8d 4d e4	 lea	 ecx, DWORD PTR _lpRequest$[ebp]
  00076	51		 push	 ecx
  00077	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0007c	c7 45 e4 c1 17
	ed 01		 mov	 DWORD PTR _lpRequest$[ebp], 32315329 ; 01ed17c1H
  00083	66 89 55 f8	 mov	 WORD PTR _lpRequest$[ebp+20], dx
  00087	88 45 fa	 mov	 BYTE PTR _lpRequest$[ebp+22], al
  0008a	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN1@CGReqOffer@2:

; 60   : }

  0008f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00092	33 cd		 xor	 ecx, ebp
  00094	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c2 08 00	 ret	 8
?CGReqOfferListByFilter@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERLISTFILTER@@@Z ENDP ; GuildMatch::CGReqOfferListByFilter
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGAnsOfferList@GuildMatch@@QAEXPAE@Z		; GuildMatch::DGAnsOfferList
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsOfferList@GuildMatch@@QAEXPAE@Z
_TEXT	SEGMENT
_lpAnswerInfo$180145 = -912				; size = 84
_Offset$ = -828						; size = 4
tv391 = -824						; size = 4
tv753 = -820						; size = 4
tv437 = -816						; size = 4
_lpAnswerCount$ = -812					; size = 24
_Buffer$ = -788						; size = 781
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?DGAnsOfferList@GuildMatch@@QAEXPAE@Z PROC		; GuildMatch::DGAnsOfferList, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 03 00
	00		 sub	 esp, 912		; 00000390H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _lpData$[ebp]

; 65   : 	GUILDMATCH_DGANS_OFFERLIST_COUNT* lpRecvCount = (GUILDMATCH_DGANS_OFFERLIST_COUNT*)lpData;
; 66   : 	// ----
; 67   : 	if(		!OBJMAX_RANGE(lpRecvCount->UserIndex) 
; 68   : 		||	gObj[lpRecvCount->UserIndex].Connected != PLAYER_PLAYING )

  00017	8b 4f 05	 mov	 ecx, DWORD PTR [edi+5]
  0001a	89 8d c8 fc ff
	ff		 mov	 DWORD PTR tv391[ebp], ecx
  00020	85 c9		 test	 ecx, ecx
  00022	0f 88 91 02 00
	00		 js	 $LN5@DGAnsOffer
  00028	33 c0		 xor	 eax, eax
  0002a	81 f9 eb 2c 00
	00		 cmp	 ecx, 11499		; 00002cebH
  00030	0f 9e c0	 setle	 al
  00033	85 c0		 test	 eax, eax
  00035	0f 84 7e 02 00
	00		 je	 $LN5@DGAnsOffer
  0003b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00041	8b c1		 mov	 eax, ecx
  00043	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00049	83 7c 10 04 03	 cmp	 DWORD PTR [eax+edx+4], 3
  0004e	0f 85 65 02 00
	00		 jne	 $LN5@DGAnsOffer

; 69   : 	{
; 70   : 		return;
; 71   : 	}
; 72   : 	// ----
; 73   : 	GUILDMATCH_GCANS_OFFERLIST_COUNT lpAnswerCount = { 0 };
; 74   : 	lpAnswerCount.h.c			= 0xC2;
; 75   : 	lpAnswerCount.h.headcode	= 0xED;
; 76   : 	lpAnswerCount.h.subcode		= 0x00;
; 77   : 	lpAnswerCount.h.sizeH		= SET_NUMBERH(sizeof(GUILDMATCH_GCANS_OFFERLIST_COUNT));
; 78   : 	lpAnswerCount.h.sizeL		= SET_NUMBERL(sizeof(GUILDMATCH_GCANS_OFFERLIST_COUNT));
; 79   : 	lpAnswerCount.CurrentPage	= lpRecvCount->CurrentPage;
; 80   : 	lpAnswerCount.MaxPage		= lpRecvCount->MaxPage;

  00054	8b 57 0d	 mov	 edx, DWORD PTR [edi+13]
  00057	33 c0		 xor	 eax, eax
  00059	53		 push	 ebx
  0005a	89 85 d5 fc ff
	ff		 mov	 DWORD PTR _lpAnswerCount$[ebp+1], eax
  00060	89 85 dd fc ff
	ff		 mov	 DWORD PTR _lpAnswerCount$[ebp+9], eax
  00066	89 85 e1 fc ff
	ff		 mov	 DWORD PTR _lpAnswerCount$[ebp+13], eax
  0006c	56		 push	 esi

; 81   : 	lpAnswerCount.OfferCount	= lpRecvCount->OfferCount;

  0006d	8b 77 11	 mov	 esi, DWORD PTR [edi+17]
  00070	89 85 d9 fc ff
	ff		 mov	 DWORD PTR _lpAnswerCount$[ebp+5], eax
  00076	89 85 e5 fc ff
	ff		 mov	 DWORD PTR _lpAnswerCount$[ebp+17], eax
  0007c	66 89 85 e9 fc
	ff ff		 mov	 WORD PTR _lpAnswerCount$[ebp+21], ax
  00083	88 85 eb fc ff
	ff		 mov	 BYTE PTR _lpAnswerCount$[ebp+23], al
  00089	8b 47 09	 mov	 eax, DWORD PTR [edi+9]
  0008c	66 c7 85 d7 fc
	ff ff ed 00	 mov	 WORD PTR _lpAnswerCount$[ebp+3], 237 ; 000000edH
  00095	66 c7 85 d4 fc
	ff ff c2 00	 mov	 WORD PTR _lpAnswerCount$[ebp], 194 ; 000000c2H
  0009e	c6 85 d6 fc ff
	ff 18		 mov	 BYTE PTR _lpAnswerCount$[ebp+2], 24 ; 00000018H
  000a5	89 85 dc fc ff
	ff		 mov	 DWORD PTR _lpAnswerCount$[ebp+8], eax
  000ab	89 95 e0 fc ff
	ff		 mov	 DWORD PTR _lpAnswerCount$[ebp+12], edx
  000b1	89 b5 e4 fc ff
	ff		 mov	 DWORD PTR _lpAnswerCount$[ebp+16], esi

; 82   : 	int Offset = sizeof(GUILDMATCH_GCANS_OFFERLIST_COUNT);

  000b7	bb 18 00 00 00	 mov	 ebx, 24			; 00000018H

; 83   : 	// ----
; 84   : 	if( lpAnswerCount.OfferCount <= 0 )

  000bc	85 f6		 test	 esi, esi
  000be	7f 0e		 jg	 SHORT $LN4@DGAnsOffer

; 85   : 	{
; 86   : 		DataSend(lpRecvCount->UserIndex, (LPBYTE)&lpAnswerCount, Offset);

  000c0	53		 push	 ebx
  000c1	8d 85 d4 fc ff
	ff		 lea	 eax, DWORD PTR _lpAnswerCount$[ebp]
  000c7	50		 push	 eax
  000c8	51		 push	 ecx

; 87   : 		return;

  000c9	e9 e1 01 00 00	 jmp	 $LN16@DGAnsOffer
$LN4@DGAnsOffer:

; 88   : 	}
; 89   : 	// ----
; 90   : 	GUILDMATCH_DGANS_OFFERLIST_INFO* lpRecvInfo	= (GUILDMATCH_DGANS_OFFERLIST_INFO*)&lpData[sizeof(GUILDMATCH_DGANS_OFFERLIST_COUNT)];
; 91   : 	const int Size = sizeof(GUILDMATCH_GCANS_OFFERLIST_COUNT) + sizeof(GUILDMATCH_GCANS_OFFERLIST_INFO) * GUILD_MATCH_MAX_PAGELINE;
; 92   : 	BYTE Buffer[Size + 1] = { 0 };

  000ce	68 0c 03 00 00	 push	 780			; 0000030cH
  000d3	8d 8d ed fc ff
	ff		 lea	 ecx, DWORD PTR _Buffer$[ebp+1]
  000d9	6a 00		 push	 0
  000db	51		 push	 ecx
  000dc	e8 00 00 00 00	 call	 _memset
  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 93   : 	// ----
; 94   : 	for( int i = 0; i < lpAnswerCount.OfferCount; i++ )

  000e4	85 f6		 test	 esi, esi
  000e6	0f 8e 61 01 00
	00		 jle	 $LN1@DGAnsOffer
  000ec	89 b5 cc fc ff
	ff		 mov	 DWORD PTR tv753[ebp], esi
  000f2	6b f6 54	 imul	 esi, 84			; 00000054H
  000f5	8d 95 04 fd ff
	ff		 lea	 edx, DWORD PTR _Buffer$[ebp+24]
  000fb	83 c6 18	 add	 esi, 24			; 00000018H
  000fe	89 95 d0 fc ff
	ff		 mov	 DWORD PTR tv437[ebp], edx
  00104	8d 5f 38	 lea	 ebx, DWORD PTR [edi+56]
  00107	89 b5 c4 fc ff
	ff		 mov	 DWORD PTR _Offset$[ebp], esi
  0010d	8d 49 00	 npad	 3
$LL13@DGAnsOffer:

; 95   : 	{
; 96   : 		GUILDMATCH_GCANS_OFFERLIST_INFO lpAnswerInfo = { 0 };

  00110	33 c0		 xor	 eax, eax
  00112	6a 3c		 push	 60			; 0000003cH
  00114	50		 push	 eax
  00115	89 85 71 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+1], eax
  0011b	89 85 75 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+5], eax
  00121	89 85 79 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+9], eax
  00127	89 85 7d fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+13], eax
  0012d	89 85 81 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+17], eax
  00133	66 89 85 85 fc
	ff ff		 mov	 WORD PTR _lpAnswerInfo$180145[ebp+21], ax
  0013a	88 85 87 fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+23], al
  00140	8d 85 88 fc ff
	ff		 lea	 eax, DWORD PTR _lpAnswerInfo$180145[ebp+24]
  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 _memset

; 97   : 		// ----
; 98   : 		memcpy(lpAnswerInfo.Title, lpRecvInfo[i].Title, sizeof(lpAnswerInfo.Title));

  0014c	8b 4b dd	 mov	 ecx, DWORD PTR [ebx-35]
  0014f	8b 53 e1	 mov	 edx, DWORD PTR [ebx-31]
  00152	8b 43 e5	 mov	 eax, DWORD PTR [ebx-27]

; 99   : 		memcpy(lpAnswerInfo.GuildMaster, lpRecvInfo[i].GuildMaster, sizeof(lpAnswerInfo.GuildMaster));
; 100  : 		memcpy(lpAnswerInfo.GuildName, lpRecvInfo[i].GuildName, sizeof(lpAnswerInfo.GuildName));
; 101  : 		lpAnswerInfo.GuildMemberCount = lpRecvInfo[i].GuildMemberCount;
; 102  : 		lpAnswerInfo.GuildMasterClass = lpRecvInfo[i].GuildMasterClass / 16; //wrong...
; 103  : 		lpAnswerInfo.GuildInterests = lpRecvInfo[i].GuildInterests;
; 104  : 		lpAnswerInfo.GuildReqLevel = lpRecvInfo[i].GuildReqLevel;
; 105  : 		lpAnswerInfo.GuildReqClass = lpRecvInfo[i].GuildReqClass;
; 106  : 		lpAnswerInfo.GuildMasterLevel = lpRecvInfo[i].GuildMasterLevel;
; 107  : 		lpAnswerInfo.GuildGensClass = lpRecvInfo[i].GuildGensClass;
; 108  : 		lpAnswerInfo.OfferNumber = lpRecvInfo[i].OfferNumber;
; 109  : 		memcpy(&Buffer[Offset], (LPBYTE)&lpAnswerInfo, sizeof(GUILDMATCH_GCANS_OFFERLIST_INFO));

  00155	8b bd d0 fc ff
	ff		 mov	 edi, DWORD PTR tv437[ebp]
  0015b	89 8d 70 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp], ecx
  00161	8b 4b e9	 mov	 ecx, DWORD PTR [ebx-23]

; 110  : 		Offset += sizeof(GUILDMATCH_GCANS_OFFERLIST_INFO);

  00164	83 85 d0 fc ff
	ff 54		 add	 DWORD PTR tv437[ebp], 84 ; 00000054H
  0016b	89 85 78 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+8], eax
  00171	8b 43 f1	 mov	 eax, DWORD PTR [ebx-15]
  00174	89 95 74 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+4], edx
  0017a	8b 53 ed	 mov	 edx, DWORD PTR [ebx-19]
  0017d	89 8d 7c fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+12], ecx
  00183	8b 4b f5	 mov	 ecx, DWORD PTR [ebx-11]
  00186	89 85 84 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+20], eax
  0018c	66 8b 43 fd	 mov	 ax, WORD PTR [ebx-3]
  00190	89 95 80 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+16], edx
  00196	8b 53 f9	 mov	 edx, DWORD PTR [ebx-7]
  00199	89 8d 99 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+41], ecx
  0019f	0f b6 4b ff	 movzx	 ecx, BYTE PTR [ebx-1]
  001a3	66 89 85 a1 fc
	ff ff		 mov	 WORD PTR _lpAnswerInfo$180145[ebp+49], ax
  001aa	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  001ad	89 95 9d fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+45], edx
  001b3	8b 13		 mov	 edx, DWORD PTR [ebx]
  001b5	88 8d a3 fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+51], cl
  001bb	0f b6 4b 08	 movzx	 ecx, BYTE PTR [ebx+8]
  001bf	89 85 a8 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+56], eax
  001c5	0f b6 43 0a	 movzx	 eax, BYTE PTR [ebx+10]
  001c9	89 95 a4 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+52], edx
  001cf	0f b6 53 09	 movzx	 edx, BYTE PTR [ebx+9]
  001d3	88 8d ac fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+60], cl
  001d9	0f b6 4b 0b	 movzx	 ecx, BYTE PTR [ebx+11]
  001dd	c0 e8 04	 shr	 al, 4
  001e0	88 95 ad fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+61], dl
  001e6	0f b6 53 0c	 movzx	 edx, BYTE PTR [ebx+12]
  001ea	88 85 ae fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+62], al
  001f0	0f b6 43 0d	 movzx	 eax, BYTE PTR [ebx+13]
  001f4	88 8d af fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+63], cl
  001fa	8b 4b 0e	 mov	 ecx, DWORD PTR [ebx+14]
  001fd	88 95 b0 fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+64], dl
  00203	0f b6 53 12	 movzx	 edx, BYTE PTR [ebx+18]
  00207	88 85 b1 fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+65], al
  0020d	8b 43 13	 mov	 eax, DWORD PTR [ebx+19]
  00210	89 8d b4 fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+68], ecx
  00216	83 c4 0c	 add	 esp, 12			; 0000000cH
  00219	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  0021e	8d b5 70 fc ff
	ff		 lea	 esi, DWORD PTR _lpAnswerInfo$180145[ebp]
  00224	83 c3 3a	 add	 ebx, 58			; 0000003aH
  00227	ff 8d cc fc ff
	ff		 dec	 DWORD PTR tv753[ebp]
  0022d	88 95 c0 fc ff
	ff		 mov	 BYTE PTR _lpAnswerInfo$180145[ebp+80], dl
  00233	89 85 bc fc ff
	ff		 mov	 DWORD PTR _lpAnswerInfo$180145[ebp+76], eax
  00239	f3 a5		 rep movsd
  0023b	0f 85 cf fe ff
	ff		 jne	 $LL13@DGAnsOffer

; 93   : 	// ----
; 94   : 	for( int i = 0; i < lpAnswerCount.OfferCount; i++ )

  00241	8b 9d c4 fc ff
	ff		 mov	 ebx, DWORD PTR _Offset$[ebp]
  00247	8b b5 e4 fc ff
	ff		 mov	 esi, DWORD PTR _lpAnswerCount$[ebp+16]
$LN1@DGAnsOffer:

; 111  : 	}
; 112  : 	// ----
; 113  : 	lpAnswerCount.h.sizeH = SET_NUMBERH(Offset);
; 114  : 	lpAnswerCount.h.sizeL = SET_NUMBERL(Offset);
; 115  : 	memcpy(Buffer, (LPBYTE)&lpAnswerCount, sizeof(GUILDMATCH_GCANS_OFFERLIST_COUNT));

  0024d	8b 85 d8 fc ff
	ff		 mov	 eax, DWORD PTR _lpAnswerCount$[ebp+4]
  00253	8b cb		 mov	 ecx, ebx
  00255	c1 e9 08	 shr	 ecx, 8
  00258	88 8d d5 fc ff
	ff		 mov	 BYTE PTR _lpAnswerCount$[ebp+1], cl
  0025e	8b 8d dc fc ff
	ff		 mov	 ecx, DWORD PTR _lpAnswerCount$[ebp+8]
  00264	88 9d d6 fc ff
	ff		 mov	 BYTE PTR _lpAnswerCount$[ebp+2], bl
  0026a	8b 95 d4 fc ff
	ff		 mov	 edx, DWORD PTR _lpAnswerCount$[ebp]
  00270	89 95 ec fc ff
	ff		 mov	 DWORD PTR _Buffer$[ebp], edx
  00276	8b 95 e0 fc ff
	ff		 mov	 edx, DWORD PTR _lpAnswerCount$[ebp+12]
  0027c	89 8d f4 fc ff
	ff		 mov	 DWORD PTR _Buffer$[ebp+8], ecx

; 116  : 	DataSend(lpRecvCount->UserIndex, Buffer, Offset);

  00282	53		 push	 ebx
  00283	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _Buffer$[ebp]
  00289	89 85 f0 fc ff
	ff		 mov	 DWORD PTR _Buffer$[ebp+4], eax
  0028f	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR _lpAnswerCount$[ebp+20]
  00295	89 95 f8 fc ff
	ff		 mov	 DWORD PTR _Buffer$[ebp+12], edx
  0029b	8b 95 c8 fc ff
	ff		 mov	 edx, DWORD PTR tv391[ebp]
  002a1	51		 push	 ecx
  002a2	89 b5 fc fc ff
	ff		 mov	 DWORD PTR _Buffer$[ebp+16], esi
  002a8	89 85 00 fd ff
	ff		 mov	 DWORD PTR _Buffer$[ebp+20], eax
  002ae	52		 push	 edx
$LN16@DGAnsOffer:
  002af	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  002b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  002b7	5e		 pop	 esi
  002b8	5b		 pop	 ebx
$LN5@DGAnsOffer:

; 117  : }

  002b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002bc	33 cd		 xor	 ecx, ebp
  002be	5f		 pop	 edi
  002bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c2 04 00	 ret	 4
?DGAnsOfferList@GuildMatch@@QAEXPAE@Z ENDP		; GuildMatch::DGAnsOfferList
_TEXT	ENDS
PUBLIC	_lpData$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqOfferCreate@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERCREATE@@@Z ; GuildMatch::CGReqOfferCreate
; Function compile flags: /Ogtp
;	COMDAT ?CGReqOfferCreate@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERCREATE@@@Z
_TEXT	SEGMENT
_lpData$GSCopy$ = -72					; size = 4
_lpRequest$ = -68					; size = 63
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqOfferCreate@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERCREATE@@@Z PROC ; GuildMatch::CGReqOfferCreate, COMDAT
; _this$ = ecx

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _UserIndex$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _lpData$[ebp]

; 129  : 	{
; 130  : 		return;
; 131  : 	}
; 132  : 	// ----
; 133  : 	GUILDMATCH_GDREQ_OFFERCREATE lpRequest = { 0 };

  00018	89 7d b8	 mov	 DWORD PTR _lpData$GSCopy$[ebp], edi
  0001b	85 f6		 test	 esi, esi
  0001d	0f 88 95 00 00
	00		 js	 $LN2@CGReqOffer@3

; 122  : 	if(		!OBJMAX_RANGE(UserIndex) 
; 123  : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00023	33 c0		 xor	 eax, eax
  00025	81 fe eb 2c 00
	00		 cmp	 esi, 11499		; 00002cebH
  0002b	0f 9e c0	 setle	 al
  0002e	85 c0		 test	 eax, eax
  00030	0f 84 82 00 00
	00		 je	 $LN2@CGReqOffer@3
  00036	53		 push	 ebx
  00037	8b de		 mov	 ebx, esi
  00039	69 db 40 27 00
	00		 imul	 ebx, 10048		; 00002740H
  0003f	03 1d 00 00 00
	00		 add	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00045	83 7b 04 03	 cmp	 DWORD PTR [ebx+4], 3
  00049	75 6c		 jne	 SHORT $LN8@CGReqOffer@3

; 124  : 	{
; 125  : 		return;
; 126  : 	}
; 127  : 	// ----
; 128  : 	if( gObj[UserIndex].GuildStatus != G_MASTER )

  0004b	81 bb 28 06 00
	00 80 00 00 00	 cmp	 DWORD PTR [ebx+1576], 128 ; 00000080H
  00055	75 60		 jne	 SHORT $LN8@CGReqOffer@3

; 129  : 	{
; 130  : 		return;
; 131  : 	}
; 132  : 	// ----
; 133  : 	GUILDMATCH_GDREQ_OFFERCREATE lpRequest = { 0 };

  00057	6a 3e		 push	 62			; 0000003eH
  00059	8d 55 bd	 lea	 edx, DWORD PTR _lpRequest$[ebp+1]
  0005c	6a 00		 push	 0
  0005e	52		 push	 edx
  0005f	e8 00 00 00 00	 call	 _memset

; 134  : 	lpRequest.h.c			= 0xC1;
; 135  : 	lpRequest.h.headcode	= 0xED;
; 136  : 	lpRequest.h.subcode		= 0x02;
; 137  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_OFFERCREATE);
; 138  : 	lpRequest.UserIndex		= UserIndex;

  00064	89 75 c0	 mov	 DWORD PTR _lpRequest$[ebp+4], esi
  00067	c7 45 bc c1 3f
	ed 02		 mov	 DWORD PTR _lpRequest$[ebp], 49102785 ; 02ed3fc1H

; 139  : 	memcpy(lpRequest.Title, lpData->Title, 40);

  0006e	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  00071	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00076	8d 7d c4	 lea	 edi, DWORD PTR _lpRequest$[ebp+8]
  00079	f3 a5		 rep movsd

; 140  : 	memcpy(lpRequest.GuildMaster, gObj[UserIndex].Name, 10);

  0007b	8b 43 5d	 mov	 eax, DWORD PTR [ebx+93]
  0007e	89 45 ed	 mov	 DWORD PTR _lpRequest$[ebp+49], eax
  00081	8b 4b 61	 mov	 ecx, DWORD PTR [ebx+97]

; 141  : 	lpRequest.GuildInterests = lpData->GuildInterests;

  00084	8b 45 b8	 mov	 eax, DWORD PTR _lpData$GSCopy$[ebp]
  00087	89 4d f1	 mov	 DWORD PTR _lpRequest$[ebp+53], ecx
  0008a	66 8b 53 65	 mov	 dx, WORD PTR [ebx+101]
  0008e	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
  00094	88 4d f8	 mov	 BYTE PTR _lpRequest$[ebp+60], cl
  00097	66 89 55 f5	 mov	 WORD PTR _lpRequest$[ebp+57], dx

; 142  : 	lpRequest.GuildReqLevel	= lpData->GuildReqLevel;

  0009b	8a 50 2e	 mov	 dl, BYTE PTR [eax+46]

; 143  : 	lpRequest.GuildReqClass = lpData->GuildReqClass;	

  0009e	8a 40 2f	 mov	 al, BYTE PTR [eax+47]

; 144  : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(GUILDMATCH_GDREQ_OFFERCREATE));

  000a1	6a 3f		 push	 63			; 0000003fH
  000a3	8d 4d bc	 lea	 ecx, DWORD PTR _lpRequest$[ebp]
  000a6	51		 push	 ecx
  000a7	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  000ac	88 55 f9	 mov	 BYTE PTR _lpRequest$[ebp+61], dl
  000af	88 45 fa	 mov	 BYTE PTR _lpRequest$[ebp+62], al
  000b2	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN8@CGReqOffer@3:
  000b7	5b		 pop	 ebx
$LN2@CGReqOffer@3:

; 145  : }

  000b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bb	5f		 pop	 edi
  000bc	33 cd		 xor	 ecx, ebp
  000be	5e		 pop	 esi
  000bf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 08 00	 ret	 8
?CGReqOfferCreate@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERCREATE@@@Z ENDP ; GuildMatch::CGReqOfferCreate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGAnsOfferCreate@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERCREATE@@@Z ; GuildMatch::DGAnsOfferCreate
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsOfferCreate@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERCREATE@@@Z
_TEXT	SEGMENT
_lpAnswer$ = -24					; size = 8
_lpRequest$ = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?DGAnsOfferCreate@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERCREATE@@@Z PROC ; GuildMatch::DGAnsOfferCreate, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpData$[ebp]

; 150  : 	if(		!OBJMAX_RANGE(lpData->UserIndex) 
; 151  : 		||	gObj[lpData->UserIndex].Connected != PLAYER_PLAYING )

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	85 c9		 test	 ecx, ecx
  00019	78 7c		 js	 SHORT $LN1@DGAnsOffer@2
  0001b	33 c0		 xor	 eax, eax
  0001d	81 f9 eb 2c 00
	00		 cmp	 ecx, 11499		; 00002cebH
  00023	0f 9e c0	 setle	 al
  00026	85 c0		 test	 eax, eax
  00028	74 6d		 je	 SHORT $LN1@DGAnsOffer@2
  0002a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00030	8b c1		 mov	 eax, ecx
  00032	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00038	83 7c 10 04 03	 cmp	 DWORD PTR [eax+edx+4], 3
  0003d	75 58		 jne	 SHORT $LN1@DGAnsOffer@2

; 152  : 	{
; 153  : 		return;
; 154  : 	}
; 155  : 	// ----
; 156  : 	GUILDMATCH_GDREQ_OFFERLIST lpRequest = { 0 };

  0003f	33 c0		 xor	 eax, eax
  00041	89 45 f1	 mov	 DWORD PTR _lpRequest$[ebp+1], eax
  00044	89 45 f5	 mov	 DWORD PTR _lpRequest$[ebp+5], eax
  00047	66 89 45 f9	 mov	 WORD PTR _lpRequest$[ebp+9], ax
  0004b	88 45 fb	 mov	 BYTE PTR _lpRequest$[ebp+11], al

; 157  : 	lpRequest.h.c			= 0xC1;
; 158  : 	lpRequest.h.headcode	= 0xED;
; 159  : 	lpRequest.h.subcode		= 0x00;
; 160  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_OFFERLIST);
; 161  : 	lpRequest.CurrentPage	= 1;
; 162  : 	lpRequest.UserIndex		= lpData->UserIndex;
; 163  : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(lpRequest));

  0004e	6a 0c		 push	 12			; 0000000cH
  00050	8d 45 f0	 lea	 eax, DWORD PTR _lpRequest$[ebp]
  00053	89 4d f4	 mov	 DWORD PTR _lpRequest$[ebp+4], ecx
  00056	50		 push	 eax
  00057	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  0005c	c7 45 f0 c1 0c
	ed 00		 mov	 DWORD PTR _lpRequest$[ebp], 15535297 ; 00ed0cc1H
  00063	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _lpRequest$[ebp+8], 1
  0006a	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 164  : 	// ----
; 165  : 	GUILDMATCH_GCANS_OFFERCREATE lpAnswer = { 0 };
; 166  : 	lpAnswer.h.c		= 0xC1;
; 167  : 	lpAnswer.h.headcode	= 0xED;
; 168  : 	lpAnswer.h.subcode	= 0x02;
; 169  : 	lpAnswer.h.size		= sizeof(GUILDMATCH_GCANS_OFFERCREATE);
; 170  : 	lpAnswer.Result		= 0;
; 171  : 	DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_OFFERCREATE));

  0006f	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00072	33 c0		 xor	 eax, eax
  00074	6a 08		 push	 8
  00076	8d 4d e8	 lea	 ecx, DWORD PTR _lpAnswer$[ebp]
  00079	51		 push	 ecx
  0007a	89 45 e9	 mov	 DWORD PTR _lpAnswer$[ebp+1], eax
  0007d	66 89 45 ed	 mov	 WORD PTR _lpAnswer$[ebp+5], ax
  00081	88 45 ef	 mov	 BYTE PTR _lpAnswer$[ebp+7], al
  00084	52		 push	 edx
  00085	c7 45 e8 c1 08
	ed 02		 mov	 DWORD PTR _lpAnswer$[ebp], 49088705 ; 02ed08c1H
  0008c	89 45 ec	 mov	 DWORD PTR _lpAnswer$[ebp+4], eax
  0008f	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00094	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@DGAnsOffer@2:

; 172  : }

  00097	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009a	33 cd		 xor	 ecx, ebp
  0009c	5e		 pop	 esi
  0009d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
?DGAnsOfferCreate@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERCREATE@@@Z ENDP ; GuildMatch::DGAnsOfferCreate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqOfferDelete@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERDELETE@@@Z ; GuildMatch::CGReqOfferDelete
; Function compile flags: /Ogtp
;	COMDAT ?CGReqOfferDelete@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERDELETE@@@Z
_TEXT	SEGMENT
_lpRequest$ = -24					; size = 19
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqOfferDelete@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERDELETE@@@Z PROC ; GuildMatch::CGReqOfferDelete, COMDAT
; _this$ = ecx

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _UserIndex$[ebp]

; 177  : 	if(		!OBJMAX_RANGE(UserIndex) 
; 178  : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00013	85 d2		 test	 edx, edx
  00015	78 71		 js	 SHORT $LN2@CGReqOffer@4
  00017	33 c0		 xor	 eax, eax
  00019	81 fa eb 2c 00
	00		 cmp	 edx, 11499		; 00002cebH
  0001f	0f 9e c0	 setle	 al
  00022	85 c0		 test	 eax, eax
  00024	74 62		 je	 SHORT $LN2@CGReqOffer@4
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002c	8b c2		 mov	 eax, edx
  0002e	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00034	03 c8		 add	 ecx, eax
  00036	83 79 04 03	 cmp	 DWORD PTR [ecx+4], 3
  0003a	75 4c		 jne	 SHORT $LN2@CGReqOffer@4

; 179  : 	{
; 180  : 		return;
; 181  : 	}
; 182  : 	// ----
; 183  : 	if( gObj[UserIndex].GuildStatus != G_MASTER )

  0003c	81 b9 28 06 00
	00 80 00 00 00	 cmp	 DWORD PTR [ecx+1576], 128 ; 00000080H
  00046	75 40		 jne	 SHORT $LN2@CGReqOffer@4

; 184  : 	{
; 185  : 		return;
; 186  : 	}
; 187  : 	// ----
; 188  : 	GUILDMATCH_GDREQ_OFFERDELETE lpRequest = { 0 };

  00048	33 c0		 xor	 eax, eax
  0004a	89 45 e9	 mov	 DWORD PTR _lpRequest$[ebp+1], eax
  0004d	89 45 ed	 mov	 DWORD PTR _lpRequest$[ebp+5], eax
  00050	89 45 f1	 mov	 DWORD PTR _lpRequest$[ebp+9], eax
  00053	89 45 f5	 mov	 DWORD PTR _lpRequest$[ebp+13], eax
  00056	66 89 45 f9	 mov	 WORD PTR _lpRequest$[ebp+17], ax

; 189  : 	lpRequest.h.c			= 0xC1;
; 190  : 	lpRequest.h.headcode	= 0xED;

  0005a	c7 45 e8 c1 13
	ed 03		 mov	 DWORD PTR _lpRequest$[ebp], 65868737 ; 03ed13c1H

; 191  : 	lpRequest.h.subcode		= 0x03;
; 192  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_OFFERDELETE);
; 193  : 	memcpy(lpRequest.GuildMaster, gObj[UserIndex].Name, 10);

  00061	8b 41 5d	 mov	 eax, DWORD PTR [ecx+93]
  00064	89 45 ec	 mov	 DWORD PTR _lpRequest$[ebp+4], eax
  00067	8b 41 61	 mov	 eax, DWORD PTR [ecx+97]
  0006a	89 45 f0	 mov	 DWORD PTR _lpRequest$[ebp+8], eax
  0006d	66 8b 49 65	 mov	 cx, WORD PTR [ecx+101]

; 194  : 	lpRequest.UserIndex		= UserIndex;

  00071	89 55 f7	 mov	 DWORD PTR _lpRequest$[ebp+15], edx

; 195  : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(GUILDMATCH_GDREQ_OFFERDELETE));

  00074	6a 13		 push	 19			; 00000013H
  00076	8d 55 e8	 lea	 edx, DWORD PTR _lpRequest$[ebp]
  00079	66 89 4d f4	 mov	 WORD PTR _lpRequest$[ebp+12], cx
  0007d	52		 push	 edx
  0007e	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00083	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN2@CGReqOffer@4:

; 196  : }

  00088	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008b	33 cd		 xor	 ecx, ebp
  0008d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 08 00	 ret	 8
?CGReqOfferDelete@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_OFFERDELETE@@@Z ENDP ; GuildMatch::CGReqOfferDelete
_TEXT	ENDS
PUBLIC	?DGAnsOfferDelete@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERDELETE@@@Z ; GuildMatch::DGAnsOfferDelete
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsOfferDelete@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERDELETE@@@Z
_TEXT	SEGMENT
_lpAnswer$ = -8						; size = 8
_lpData$ = 8						; size = 4
?DGAnsOfferDelete@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERDELETE@@@Z PROC ; GuildMatch::DGAnsOfferDelete, COMDAT
; _this$ = ecx

; 200  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 201  : 	if(		!OBJMAX_RANGE(lpData->UserIndex) 
; 202  : 		||	gObj[lpData->UserIndex].Connected != PLAYER_PLAYING )

  00003	8b 55 08	 mov	 edx, DWORD PTR _lpData$[ebp]
  00006	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00009	83 ec 08	 sub	 esp, 8
  0000c	85 c9		 test	 ecx, ecx
  0000e	78 64		 js	 SHORT $LN4@DGAnsOffer@3
  00010	33 c0		 xor	 eax, eax
  00012	81 f9 eb 2c 00
	00		 cmp	 ecx, 11499		; 00002cebH
  00018	0f 9e c0	 setle	 al
  0001b	85 c0		 test	 eax, eax
  0001d	74 55		 je	 SHORT $LN4@DGAnsOffer@3
  0001f	8b c1		 mov	 eax, ecx
  00021	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00027	56		 push	 esi
  00028	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002e	83 7c 30 04 03	 cmp	 DWORD PTR [eax+esi+4], 3
  00033	5e		 pop	 esi
  00034	75 3e		 jne	 SHORT $LN4@DGAnsOffer@3

; 203  : 	{
; 204  : 		return;
; 205  : 	}
; 206  : 	// ----
; 207  : 	GUILDMATCH_GDREQ_OFFERLIST lpRequest = { 0 };
; 208  : 	lpRequest.h.c			= 0xC1;
; 209  : 	lpRequest.h.headcode	= 0xED;
; 210  : 	lpRequest.h.subcode		= 0x00;
; 211  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_OFFERLIST);
; 212  : 	lpRequest.CurrentPage	= 1;
; 213  : 	lpRequest.UserIndex		= lpData->UserIndex;
; 214  : 	// ----
; 215  : 	GUILDMATCH_CGANS_OFFERDELETE lpAnswer = { 0 };

  00036	33 c0		 xor	 eax, eax
  00038	89 45 f9	 mov	 DWORD PTR _lpAnswer$[ebp+1], eax
  0003b	66 89 45 fd	 mov	 WORD PTR _lpAnswer$[ebp+5], ax
  0003f	88 45 ff	 mov	 BYTE PTR _lpAnswer$[ebp+7], al

; 216  : 	lpAnswer.h.c		= 0xC1;
; 217  : 	lpAnswer.h.headcode	= 0xED;
; 218  : 	lpAnswer.h.subcode	= 0x03;
; 219  : 	lpAnswer.h.size		= sizeof(GUILDMATCH_CGANS_OFFERDELETE);
; 220  : 	// ----
; 221  : 	if( lpData->Result == 0 )

  00042	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00045	c7 45 f8 c1 08
	ed 03		 mov	 DWORD PTR _lpAnswer$[ebp], 65865921 ; 03ed08c1H
  0004c	85 c0		 test	 eax, eax
  0004e	75 09		 jne	 SHORT $LN3@DGAnsOffer@3

; 222  : 	{
; 223  : 		lpAnswer.Result = -3;

  00050	c7 45 fc fd ff
	ff ff		 mov	 DWORD PTR _lpAnswer$[ebp+4], -3 ; fffffffdH
  00057	eb 0c		 jmp	 SHORT $LN1@DGAnsOffer@3
$LN3@DGAnsOffer@3:

; 224  : 	}
; 225  : 	else if( lpData->Result == 1 )

  00059	83 f8 01	 cmp	 eax, 1
  0005c	75 07		 jne	 SHORT $LN1@DGAnsOffer@3

; 226  : 	{
; 227  : 		lpAnswer.Result = 0;

  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _lpAnswer$[ebp+4], 0
$LN1@DGAnsOffer@3:

; 228  : 		//cDBSMng.Send((PCHAR)&lpRequest, sizeof(lpRequest));
; 229  : 	}
; 230  : 	// ----
; 231  : 	DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_CGANS_OFFERDELETE));

  00065	6a 08		 push	 8
  00067	8d 55 f8	 lea	 edx, DWORD PTR _lpAnswer$[ebp]
  0006a	52		 push	 edx
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@DGAnsOffer@3:

; 232  : }

  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?DGAnsOfferDelete@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERDELETE@@@Z ENDP ; GuildMatch::DGAnsOfferDelete
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqJoinReq@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQ@@@Z ; GuildMatch::CGReqJoinReq
; Function compile flags: /Ogtp
;	COMDAT ?CGReqJoinReq@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQ@@@Z
_TEXT	SEGMENT
_lpAnswer$180216 = -68					; size = 8
_lpRequest$ = -60					; size = 56
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqJoinReq@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQ@@@Z PROC ; GuildMatch::CGReqJoinReq, COMDAT
; _this$ = ecx

; 236  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 0c	 mov	 ebx, DWORD PTR _lpData$[ebp]
  00014	57		 push	 edi
  00015	8b 7d 08	 mov	 edi, DWORD PTR _UserIndex$[ebp]

; 237  : 	if(		!OBJMAX_RANGE(UserIndex) 
; 238  : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00018	85 ff		 test	 edi, edi
  0001a	0f 88 b6 00 00
	00		 js	 $LN2@CGReqJoinR
  00020	33 c0		 xor	 eax, eax
  00022	81 ff eb 2c 00
	00		 cmp	 edi, 11499		; 00002cebH
  00028	0f 9e c0	 setle	 al
  0002b	85 c0		 test	 eax, eax
  0002d	0f 84 a3 00 00
	00		 je	 $LN2@CGReqJoinR
  00033	56		 push	 esi
  00034	8b f7		 mov	 esi, edi
  00036	69 f6 40 27 00
	00		 imul	 esi, 10048		; 00002740H
  0003c	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00042	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  00046	0f 85 89 00 00
	00		 jne	 $LN8@CGReqJoinR

; 239  : 	{
; 240  : 		return;
; 241  : 	}
; 242  : 	// ----
; 243  : 	if( gObj[UserIndex].GuildNumber > 0 )

  0004c	83 be 14 06 00
	00 00		 cmp	 DWORD PTR [esi+1556], 0
  00053	7e 3c		 jle	 SHORT $LN1@CGReqJoinR

; 244  : 	{
; 245  : 		GUILDMATCH_GCANS_JOINREQ lpAnswer = { 0 };

  00055	33 c0		 xor	 eax, eax

; 246  : 		lpAnswer.h.c		= 0xC1;
; 247  : 		lpAnswer.h.headcode	= 0xED;
; 248  : 		lpAnswer.h.subcode	= 0x04;
; 249  : 		lpAnswer.h.size		= sizeof(GUILDMATCH_GCANS_JOINREQ);
; 250  : 		lpAnswer.Result		= -3;
; 251  : 		DataSend(UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_JOINREQ));

  00057	6a 08		 push	 8
  00059	8d 55 bc	 lea	 edx, DWORD PTR _lpAnswer$180216[ebp]
  0005c	52		 push	 edx
  0005d	89 45 bd	 mov	 DWORD PTR _lpAnswer$180216[ebp+1], eax
  00060	66 89 45 c1	 mov	 WORD PTR _lpAnswer$180216[ebp+5], ax
  00064	88 45 c3	 mov	 BYTE PTR _lpAnswer$180216[ebp+7], al
  00067	57		 push	 edi
  00068	c7 45 bc c1 08
	ed 04		 mov	 DWORD PTR _lpAnswer$180216[ebp], 82643137 ; 04ed08c1H
  0006f	c7 45 c0 fd ff
	ff ff		 mov	 DWORD PTR _lpAnswer$180216[ebp+4], -3 ; fffffffdH
  00076	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007e	5e		 pop	 esi
  0007f	5f		 pop	 edi
  00080	5b		 pop	 ebx

; 264  : }

  00081	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00084	33 cd		 xor	 ecx, ebp
  00086	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 08 00	 ret	 8
$LN1@CGReqJoinR:

; 252  : 		return;
; 253  : 	}
; 254  : 	// ----
; 255  : 	GUILDMATCH_GDREQ_JOINREQ lpRequest = { 0 };

  00091	6a 37		 push	 55			; 00000037H
  00093	8d 45 c5	 lea	 eax, DWORD PTR _lpRequest$[ebp+1]
  00096	6a 00		 push	 0
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 _memset

; 256  : 	lpRequest.h.c			= 0xC1;
; 257  : 	lpRequest.h.headcode	= 0xED;

  0009e	c7 45 c4 c1 38
	ed 04		 mov	 DWORD PTR _lpRequest$[ebp], 82655425 ; 04ed38c1H

; 258  : 	lpRequest.h.subcode		= 0x04;
; 259  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_JOINREQ);
; 260  : 	lpRequest.UserIndex		= UserIndex;

  000a5	89 7d c8	 mov	 DWORD PTR _lpRequest$[ebp+4], edi

; 261  : 	memcpy(lpRequest.Sender, gObj[UserIndex].Name, 10);

  000a8	8b 4e 5d	 mov	 ecx, DWORD PTR [esi+93]
  000ab	89 4d cc	 mov	 DWORD PTR _lpRequest$[ebp+8], ecx
  000ae	8b 56 61	 mov	 edx, DWORD PTR [esi+97]

; 262  : 	lpRequest.OfferNumber	= lpData->OfferNumber;

  000b1	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b7	89 55 d0	 mov	 DWORD PTR _lpRequest$[ebp+12], edx
  000ba	66 8b 46 65	 mov	 ax, WORD PTR [esi+101]

; 263  : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(GUILDMATCH_GDREQ_JOINREQ));

  000be	6a 38		 push	 56			; 00000038H
  000c0	8d 55 c4	 lea	 edx, DWORD PTR _lpRequest$[ebp]
  000c3	89 4d f8	 mov	 DWORD PTR _lpRequest$[ebp+52], ecx
  000c6	52		 push	 edx
  000c7	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  000cc	66 89 45 d4	 mov	 WORD PTR _lpRequest$[ebp+16], ax
  000d0	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN8@CGReqJoinR:
  000d5	5e		 pop	 esi
$LN2@CGReqJoinR:

; 264  : }

  000d6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d9	5f		 pop	 edi
  000da	33 cd		 xor	 ecx, ebp
  000dc	5b		 pop	 ebx
  000dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 08 00	 ret	 8
?CGReqJoinReq@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQ@@@Z ENDP ; GuildMatch::CGReqJoinReq
_TEXT	ENDS
PUBLIC	?DGAnsJoinReq@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_JOINREQ@@@Z ; GuildMatch::DGAnsJoinReq
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsJoinReq@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_JOINREQ@@@Z
_TEXT	SEGMENT
_lpNotification$180241 = -16				; size = 8
_lpAnswer$ = -8						; size = 8
_lpData$ = 8						; size = 4
?DGAnsJoinReq@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_JOINREQ@@@Z PROC ; GuildMatch::DGAnsJoinReq, COMDAT
; _this$ = ecx

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx

; 269  : 	if(		!OBJMAX_RANGE(lpData->UserIndex) 
; 270  : 		||	gObj[lpData->UserIndex].Connected != PLAYER_PLAYING )

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _lpData$[ebp]
  0000a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0000d	85 c9		 test	 ecx, ecx
  0000f	0f 88 e6 00 00
	00		 js	 $LN7@DGAnsJoinR
  00015	33 c0		 xor	 eax, eax
  00017	81 f9 eb 2c 00
	00		 cmp	 ecx, 11499		; 00002cebH
  0001d	0f 9e c0	 setle	 al
  00020	85 c0		 test	 eax, eax
  00022	0f 84 d3 00 00
	00		 je	 $LN7@DGAnsJoinR
  00028	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002e	8b c1		 mov	 eax, ecx
  00030	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00036	83 7c 10 04 03	 cmp	 DWORD PTR [eax+edx+4], 3
  0003b	0f 85 ba 00 00
	00		 jne	 $LN7@DGAnsJoinR

; 271  : 	{
; 272  : 		return;
; 273  : 	}
; 274  : 	// ----
; 275  : 	GUILDMATCH_GCANS_JOINREQ lpAnswer = { 0 };

  00041	33 c0		 xor	 eax, eax
  00043	89 45 f9	 mov	 DWORD PTR _lpAnswer$[ebp+1], eax

; 276  : 	lpAnswer.h.c		= 0xC1;
; 277  : 	lpAnswer.h.headcode	= 0xED;
; 278  : 	lpAnswer.h.subcode	= 0x04;
; 279  : 	lpAnswer.h.size		= sizeof(GUILDMATCH_GCANS_JOINREQ);
; 280  : 	lpAnswer.Result		= lpData->Result;
; 281  : 	DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_JOINREQ));

  00046	6a 08		 push	 8
  00048	8d 55 f8	 lea	 edx, DWORD PTR _lpAnswer$[ebp]
  0004b	66 89 45 fd	 mov	 WORD PTR _lpAnswer$[ebp+5], ax
  0004f	88 45 ff	 mov	 BYTE PTR _lpAnswer$[ebp+7], al
  00052	8b 43 13	 mov	 eax, DWORD PTR [ebx+19]
  00055	52		 push	 edx
  00056	51		 push	 ecx
  00057	c7 45 f8 c1 08
	ed 04		 mov	 DWORD PTR _lpAnswer$[ebp], 82643137 ; 04ed08c1H
  0005e	89 45 fc	 mov	 DWORD PTR _lpAnswer$[ebp+4], eax
  00061	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00066	83 c4 0c	 add	 esp, 12			; 0000000cH

; 282  : 	// ----
; 283  : 	if( lpData->Result == 0 )

  00069	83 7b 13 00	 cmp	 DWORD PTR [ebx+19], 0
  0006d	0f 85 88 00 00
	00		 jne	 $LN7@DGAnsJoinR

; 284  : 	{
; 285  : 		for( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++ )

  00073	56		 push	 esi
  00074	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0007a	57		 push	 edi
  0007b	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  00080	81 c6 5d dd 49
	06		 add	 esi, 105504093		; 0649dd5dH
$LL5@DGAnsJoinR:

; 286  : 		{
; 287  : 			if( gObj[i].Name != NULL && !strcmp(lpData->Recipient, gObj[i].Name) )

  00086	85 f6		 test	 esi, esi
  00088	74 35		 je	 SHORT $LN4@DGAnsJoinR
  0008a	8b ce		 mov	 ecx, esi
  0008c	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  0008f	90		 npad	 1
$LL16@DGAnsJoinR:
  00090	8a 10		 mov	 dl, BYTE PTR [eax]
  00092	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00094	75 1a		 jne	 SHORT $LN17@DGAnsJoinR
  00096	84 d2		 test	 dl, dl
  00098	74 12		 je	 SHORT $LN18@DGAnsJoinR
  0009a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0009d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000a0	75 0e		 jne	 SHORT $LN17@DGAnsJoinR
  000a2	83 c0 02	 add	 eax, 2
  000a5	83 c1 02	 add	 ecx, 2
  000a8	84 d2		 test	 dl, dl
  000aa	75 e4		 jne	 SHORT $LL16@DGAnsJoinR
$LN18@DGAnsJoinR:
  000ac	33 c0		 xor	 eax, eax
  000ae	eb 05		 jmp	 SHORT $LN19@DGAnsJoinR
$LN17@DGAnsJoinR:
  000b0	1b c0		 sbb	 eax, eax
  000b2	83 d8 ff	 sbb	 eax, -1
$LN19@DGAnsJoinR:
  000b5	85 c0		 test	 eax, eax
  000b7	75 06		 jne	 SHORT $LN4@DGAnsJoinR

; 288  : 			{
; 289  : 				if( gObj[i].Connected == PLAYER_PLAYING )

  000b9	83 7e a7 03	 cmp	 DWORD PTR [esi-89], 3
  000bd	74 18		 je	 SHORT $LN14@DGAnsJoinR
$LN4@DGAnsJoinR:

; 284  : 	{
; 285  : 		for( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++ )

  000bf	47		 inc	 edi
  000c0	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  000c6	81 ff ec 2c 00
	00		 cmp	 edi, 11500		; 00002cecH
  000cc	7c b8		 jl	 SHORT $LL5@DGAnsJoinR
  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx

; 297  : 					break;
; 298  : 				}
; 299  : 			}
; 300  : 		}
; 301  : 	}
; 302  : 	
; 303  : }

  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c2 04 00	 ret	 4
$LN14@DGAnsJoinR:

; 290  : 				{
; 291  : 					GUILDMATCH_GCSET_JOINNOTIFICATION lpNotification = { 0 };

  000d7	33 c0		 xor	 eax, eax
  000d9	89 45 f1	 mov	 DWORD PTR _lpNotification$180241[ebp+1], eax
  000dc	66 89 45 f5	 mov	 WORD PTR _lpNotification$180241[ebp+5], ax
  000e0	88 45 f7	 mov	 BYTE PTR _lpNotification$180241[ebp+7], al

; 292  : 					lpNotification.h.c			= 0xC1;
; 293  : 					lpNotification.h.headcode	= 0xED;
; 294  : 					lpNotification.h.subcode	= 0x10;
; 295  : 					lpNotification.h.size		= sizeof(GUILDMATCH_GCSET_JOINNOTIFICATION);
; 296  : 					DataSend(i, (LPBYTE)&lpNotification, sizeof(GUILDMATCH_GCSET_JOINNOTIFICATION));

  000e3	6a 08		 push	 8
  000e5	8d 45 f0	 lea	 eax, DWORD PTR _lpNotification$180241[ebp]
  000e8	50		 push	 eax
  000e9	57		 push	 edi
  000ea	c7 45 f0 c1 08
	ed 10		 mov	 DWORD PTR _lpNotification$180241[ebp], 283969729 ; 10ed08c1H
  000f1	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
$LN7@DGAnsJoinR:
  000fb	5b		 pop	 ebx

; 297  : 					break;
; 298  : 				}
; 299  : 			}
; 300  : 		}
; 301  : 	}
; 302  : 	
; 303  : }

  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 04 00	 ret	 4
?DGAnsJoinReq@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_JOINREQ@@@Z ENDP ; GuildMatch::DGAnsJoinReq
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqJoinReqDelete@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQDELETE@@@Z ; GuildMatch::CGReqJoinReqDelete
; Function compile flags: /Ogtp
;	COMDAT ?CGReqJoinReqDelete@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQDELETE@@@Z
_TEXT	SEGMENT
_lpRequest$ = -56					; size = 52
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqJoinReqDelete@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQDELETE@@@Z PROC ; GuildMatch::CGReqJoinReqDelete, COMDAT
; _this$ = ecx

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR _UserIndex$[ebp]

; 308  : 	if(		!OBJMAX_RANGE(UserIndex) 
; 309  : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00014	85 ff		 test	 edi, edi
  00016	78 63		 js	 SHORT $LN1@CGReqJoinR@2
  00018	33 c0		 xor	 eax, eax
  0001a	81 ff eb 2c 00
	00		 cmp	 edi, 11499		; 00002cebH
  00020	0f 9e c0	 setle	 al
  00023	85 c0		 test	 eax, eax
  00025	74 54		 je	 SHORT $LN1@CGReqJoinR@2
  00027	56		 push	 esi
  00028	8b f7		 mov	 esi, edi
  0002a	69 f6 40 27 00
	00		 imul	 esi, 10048		; 00002740H
  00030	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00036	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  0003a	75 3e		 jne	 SHORT $LN7@CGReqJoinR@2

; 310  : 	{
; 311  : 		return;
; 312  : 	}
; 313  : 	// ----
; 314  : 	GUILDMATCH_GDREQ_JOINREQSTATUS lpRequest = { 0 };

  0003c	6a 33		 push	 51			; 00000033H
  0003e	8d 55 c9	 lea	 edx, DWORD PTR _lpRequest$[ebp+1]
  00041	6a 00		 push	 0
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 _memset

; 315  : 	lpRequest.h.c			= 0xC1;
; 316  : 	lpRequest.h.headcode	= 0xED;

  00049	c7 45 c8 c1 34
	ed 05		 mov	 DWORD PTR _lpRequest$[ebp], 99431617 ; 05ed34c1H

; 317  : 	lpRequest.h.subcode		= 0x05;
; 318  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_JOINREQSTATUS);
; 319  : 	lpRequest.UserIndex		= UserIndex;

  00050	89 7d cc	 mov	 DWORD PTR _lpRequest$[ebp+4], edi

; 320  : 	memcpy(lpRequest.Sender, gObj[UserIndex].Name, 10);

  00053	8b 46 5d	 mov	 eax, DWORD PTR [esi+93]
  00056	89 45 d0	 mov	 DWORD PTR _lpRequest$[ebp+8], eax
  00059	8b 4e 61	 mov	 ecx, DWORD PTR [esi+97]
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005f	89 4d d4	 mov	 DWORD PTR _lpRequest$[ebp+12], ecx
  00062	66 8b 56 65	 mov	 dx, WORD PTR [esi+101]

; 321  : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(GUILDMATCH_GDREQ_JOINREQSTATUS));

  00066	6a 34		 push	 52			; 00000034H
  00068	8d 45 c8	 lea	 eax, DWORD PTR _lpRequest$[ebp]
  0006b	50		 push	 eax
  0006c	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00071	66 89 55 d8	 mov	 WORD PTR _lpRequest$[ebp+16], dx
  00075	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN7@CGReqJoinR@2:
  0007a	5e		 pop	 esi
$LN1@CGReqJoinR@2:

; 322  : }

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007e	33 cd		 xor	 ecx, ebp
  00080	5f		 pop	 edi
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 08 00	 ret	 8
?CGReqJoinReqDelete@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQDELETE@@@Z ENDP ; GuildMatch::CGReqJoinReqDelete
_TEXT	ENDS
PUBLIC	?DGAnsJoinReqDelete@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERDELETE@@@Z ; GuildMatch::DGAnsJoinReqDelete
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsJoinReqDelete@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERDELETE@@@Z
_TEXT	SEGMENT
_lpAnswer$ = -8						; size = 8
_lpData$ = 8						; size = 4
?DGAnsJoinReqDelete@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERDELETE@@@Z PROC ; GuildMatch::DGAnsJoinReqDelete, COMDAT
; _this$ = ecx

; 326  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 327  : 	if(		!OBJMAX_RANGE(lpData->UserIndex) 
; 328  : 		||	gObj[lpData->UserIndex].Connected != PLAYER_PLAYING )

  00003	8b 55 08	 mov	 edx, DWORD PTR _lpData$[ebp]
  00006	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00009	83 ec 08	 sub	 esp, 8
  0000c	85 c9		 test	 ecx, ecx
  0000e	78 4e		 js	 SHORT $LN2@DGAnsJoinR@2
  00010	33 c0		 xor	 eax, eax
  00012	81 f9 eb 2c 00
	00		 cmp	 ecx, 11499		; 00002cebH
  00018	0f 9e c0	 setle	 al
  0001b	85 c0		 test	 eax, eax
  0001d	74 3f		 je	 SHORT $LN2@DGAnsJoinR@2
  0001f	8b c1		 mov	 eax, ecx
  00021	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00027	56		 push	 esi
  00028	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002e	83 7c 30 04 03	 cmp	 DWORD PTR [eax+esi+4], 3
  00033	5e		 pop	 esi
  00034	75 28		 jne	 SHORT $LN2@DGAnsJoinR@2

; 329  : 	{
; 330  : 		return;
; 331  : 	}
; 332  : 	// ----
; 333  : 	GUILDMATCH_GCANS_JOINREQDELETE lpAnswer = { 0 };

  00036	33 c0		 xor	 eax, eax

; 334  : 	lpAnswer.h.c			= 0xC1;
; 335  : 	lpAnswer.h.headcode		= 0xED;
; 336  : 	lpAnswer.h.subcode		= 0x05;
; 337  : 	lpAnswer.h.size			= sizeof(GUILDMATCH_GCANS_JOINREQDELETE);
; 338  : 	// ----
; 339  : 	if( lpData->Result == 1 )

  00038	83 7a 08 01	 cmp	 DWORD PTR [edx+8], 1
  0003c	89 45 f9	 mov	 DWORD PTR _lpAnswer$[ebp+1], eax
  0003f	66 89 45 fd	 mov	 WORD PTR _lpAnswer$[ebp+5], ax
  00043	88 45 ff	 mov	 BYTE PTR _lpAnswer$[ebp+7], al
  00046	c7 45 f8 c1 08
	ed 05		 mov	 DWORD PTR _lpAnswer$[ebp], 99420353 ; 05ed08c1H
  0004d	75 0f		 jne	 SHORT $LN2@DGAnsJoinR@2

; 340  : 	{
; 341  : 		DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_JOINREQDELETE));

  0004f	6a 08		 push	 8
  00051	8d 55 f8	 lea	 edx, DWORD PTR _lpAnswer$[ebp]
  00054	52		 push	 edx
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@DGAnsJoinR@2:

; 342  : 	}
; 343  : }

  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
?DGAnsJoinReqDelete@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_OFFERDELETE@@@Z ENDP ; GuildMatch::DGAnsJoinReqDelete
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqJoinReqAnswer@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_REQUESTANSWER@@@Z ; GuildMatch::CGReqJoinReqAnswer
; Function compile flags: /Ogtp
;	COMDAT ?CGReqJoinReqAnswer@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_REQUESTANSWER@@@Z
_TEXT	SEGMENT
_lpRequest$ = -36					; size = 32
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqJoinReqAnswer@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_REQUESTANSWER@@@Z PROC ; GuildMatch::CGReqJoinReqAnswer, COMDAT
; _this$ = ecx

; 347  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _UserIndex$[ebp]
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _lpData$[ebp]

; 348  : 	if(		!OBJMAX_RANGE(UserIndex) 
; 349  : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00016	85 d2		 test	 edx, edx
  00018	0f 88 8b 00 00
	00		 js	 $LN1@CGReqJoinR@3
  0001e	33 c0		 xor	 eax, eax
  00020	81 fa eb 2c 00
	00		 cmp	 edx, 11499		; 00002cebH
  00026	0f 9e c0	 setle	 al
  00029	85 c0		 test	 eax, eax
  0002b	74 7c		 je	 SHORT $LN1@CGReqJoinR@3
  0002d	8b c2		 mov	 eax, edx
  0002f	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00035	56		 push	 esi
  00036	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0003c	03 f0		 add	 esi, eax
  0003e	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  00042	75 64		 jne	 SHORT $LN7@CGReqJoinR@3

; 350  : 	{
; 351  : 		return;
; 352  : 	}
; 353  : 	// ----
; 354  : 	GUILDMATCH_GDREQ_REQUESTANSWER lpRequest = { 0 };

  00044	33 c0		 xor	 eax, eax
  00046	89 45 dd	 mov	 DWORD PTR _lpRequest$[ebp+1], eax
  00049	89 45 e1	 mov	 DWORD PTR _lpRequest$[ebp+5], eax
  0004c	89 45 e5	 mov	 DWORD PTR _lpRequest$[ebp+9], eax
  0004f	89 45 e9	 mov	 DWORD PTR _lpRequest$[ebp+13], eax
  00052	89 45 ed	 mov	 DWORD PTR _lpRequest$[ebp+17], eax
  00055	89 45 f1	 mov	 DWORD PTR _lpRequest$[ebp+21], eax
  00058	89 45 f5	 mov	 DWORD PTR _lpRequest$[ebp+25], eax
  0005b	66 89 45 f9	 mov	 WORD PTR _lpRequest$[ebp+29], ax
  0005f	88 45 fb	 mov	 BYTE PTR _lpRequest$[ebp+31], al

; 355  : 	lpRequest.h.c			= 0xC1;
; 356  : 	lpRequest.h.headcode	= 0xED;
; 357  : 	lpRequest.h.subcode		= 0x06;
; 358  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_REQUESTANSWER);
; 359  : 	lpRequest.UserIndex		= UserIndex;
; 360  : 	lpRequest.Type			= lpData->Result;
; 361  : 	memcpy(lpRequest.Character, lpData->Character, 10);

  00062	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00065	89 55 e0	 mov	 DWORD PTR _lpRequest$[ebp+4], edx
  00068	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0006b	89 45 e4	 mov	 DWORD PTR _lpRequest$[ebp+8], eax
  0006e	66 8b 41 10	 mov	 ax, WORD PTR [ecx+16]
  00072	89 55 f8	 mov	 DWORD PTR _lpRequest$[ebp+28], edx
  00075	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00078	66 89 45 ec	 mov	 WORD PTR _lpRequest$[ebp+16], ax
  0007c	c7 45 dc c1 20
	ed 06		 mov	 DWORD PTR _lpRequest$[ebp], 116203713 ; 06ed20c1H
  00083	89 55 e8	 mov	 DWORD PTR _lpRequest$[ebp+12], edx

; 362  : 	memcpy(lpRequest.Guild, gObj[UserIndex].lpGuild->Name, 8);

  00086	8b 86 18 06 00
	00		 mov	 eax, DWORD PTR [esi+1560]
  0008c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008f	89 4d ef	 mov	 DWORD PTR _lpRequest$[ebp+19], ecx
  00092	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 363  : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(GUILDMATCH_GDREQ_REQUESTANSWER));

  00095	6a 20		 push	 32			; 00000020H
  00097	8d 45 dc	 lea	 eax, DWORD PTR _lpRequest$[ebp]
  0009a	50		 push	 eax
  0009b	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  000a0	89 55 f3	 mov	 DWORD PTR _lpRequest$[ebp+23], edx
  000a3	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN7@CGReqJoinR@3:
  000a8	5e		 pop	 esi
$LN1@CGReqJoinR@3:

; 364  : }

  000a9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ac	33 cd		 xor	 ecx, ebp
  000ae	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 08 00	 ret	 8
?CGReqJoinReqAnswer@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_REQUESTANSWER@@@Z ENDP ; GuildMatch::CGReqJoinReqAnswer
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGAnsJoinReqAnswer@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_REQUESTANSWER@@@Z ; GuildMatch::DGAnsJoinReqAnswer
EXTRN	?GCGuildViewportNowPaint@@YAXHPADPAEH@Z:PROC	; GCGuildViewportNowPaint
EXTRN	?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z:PROC ; CGuildClass::AddMember
EXTRN	?Guild@@3VCGuildClass@@A:BYTE			; Guild
EXTRN	?gGameServerCode@@3FA:WORD			; gGameServerCode
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsJoinReqAnswer@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_REQUESTANSWER@@@Z
_TEXT	SEGMENT
tv347 = -32						; size = 4
_lpAnswer$ = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?DGAnsJoinReqAnswer@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_REQUESTANSWER@@@Z PROC ; GuildMatch::DGAnsJoinReqAnswer, COMDAT
; _this$ = ecx

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _lpData$[ebp]

; 369  : 	if(		!OBJMAX_RANGE(lpData->UserIndex)
; 370  : 		||	gObj[lpData->UserIndex].Connected != PLAYER_PLAYING )

  00014	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00017	85 c9		 test	 ecx, ecx
  00019	0f 88 3a 02 00
	00		 js	 $LN13@DGAnsJoinR@3
  0001f	33 c0		 xor	 eax, eax
  00021	81 f9 eb 2c 00
	00		 cmp	 ecx, 11499		; 00002cebH
  00027	0f 9e c0	 setle	 al
  0002a	85 c0		 test	 eax, eax
  0002c	0f 84 27 02 00
	00		 je	 $LN13@DGAnsJoinR@3
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00038	8b c1		 mov	 eax, ecx
  0003a	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00040	83 7c 10 04 03	 cmp	 DWORD PTR [eax+edx+4], 3
  00045	0f 85 0e 02 00
	00		 jne	 $LN13@DGAnsJoinR@3

; 371  : 	{
; 372  : 		return;
; 373  : 	}
; 374  : 	// ----
; 375  : 	GUILDMATCH_GCANS_REQUESTANSWER lpAnswer = { 0 };
; 376  : 	lpAnswer.h.c			= 0xC1;
; 377  : 	lpAnswer.h.headcode		= 0xED;
; 378  : 	lpAnswer.h.subcode		= 0x06;
; 379  : 	lpAnswer.h.size			= sizeof(GUILDMATCH_GCANS_REQUESTANSWER);
; 380  : 	lpAnswer.Type			= lpData->Type;
; 381  : 	memcpy(lpAnswer.Character, lpData->Character, 10);

  0004b	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  0004e	33 c0		 xor	 eax, eax
  00050	89 45 e5	 mov	 DWORD PTR _lpAnswer$[ebp+1], eax
  00053	89 45 e9	 mov	 DWORD PTR _lpAnswer$[ebp+5], eax
  00056	89 55 e8	 mov	 DWORD PTR _lpAnswer$[ebp+4], edx
  00059	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  0005c	89 45 ed	 mov	 DWORD PTR _lpAnswer$[ebp+9], eax
  0005f	89 45 f1	 mov	 DWORD PTR _lpAnswer$[ebp+13], eax
  00062	89 45 f5	 mov	 DWORD PTR _lpAnswer$[ebp+17], eax
  00065	66 89 45 f9	 mov	 WORD PTR _lpAnswer$[ebp+21], ax
  00069	88 45 fb	 mov	 BYTE PTR _lpAnswer$[ebp+23], al
  0006c	8b 43 13	 mov	 eax, DWORD PTR [ebx+19]
  0006f	89 55 ec	 mov	 DWORD PTR _lpAnswer$[ebp+8], edx
  00072	66 8b 53 10	 mov	 dx, WORD PTR [ebx+16]
  00076	c7 45 e4 c1 18
	ed 06		 mov	 DWORD PTR _lpAnswer$[ebp], 116201665 ; 06ed18c1H
  0007d	89 45 f4	 mov	 DWORD PTR _lpAnswer$[ebp+16], eax
  00080	66 89 55 f0	 mov	 WORD PTR _lpAnswer$[ebp+12], dx

; 382  : 	// ----
; 383  : 	if( lpData->Type == 0 )

  00084	85 c0		 test	 eax, eax
  00086	75 2b		 jne	 SHORT $LN12@DGAnsJoinR@3

; 384  : 	{
; 385  : 		if( lpData->Result == -1 )

  00088	83 c8 ff	 or	 eax, -1

; 386  : 		{
; 387  : 			lpAnswer.Type = -1;
; 388  : 			DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_REQUESTANSWER));

  0008b	6a 18		 push	 24			; 00000018H
  0008d	39 43 17	 cmp	 DWORD PTR [ebx+23], eax
  00090	75 60		 jne	 SHORT $LN11@DGAnsJoinR@3
  00092	89 45 f4	 mov	 DWORD PTR _lpAnswer$[ebp+16], eax
  00095	8d 45 e4	 lea	 eax, DWORD PTR _lpAnswer$[ebp]
  00098	50		 push	 eax
  00099	51		 push	 ecx
  0009a	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0009f	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a2	5b		 pop	 ebx

; 432  : 	}
; 433  : }

  000a3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a6	33 cd		 xor	 ecx, ebp
  000a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 04 00	 ret	 4
$LN12@DGAnsJoinR@3:

; 389  : 			return;
; 390  : 		}
; 391  : 		// ----
; 392  : 		DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_REQUESTANSWER));
; 393  : 	}
; 394  : 	else if( lpData->Type == 1 )

  000b3	83 f8 01	 cmp	 eax, 1
  000b6	0f 85 9d 01 00
	00		 jne	 $LN13@DGAnsJoinR@3

; 395  : 	{
; 396  : 		if( lpData->Result == -1 )

  000bc	8b 43 17	 mov	 eax, DWORD PTR [ebx+23]
  000bf	83 ca ff	 or	 edx, -1
  000c2	3b c2		 cmp	 eax, edx
  000c4	75 23		 jne	 SHORT $LN8@DGAnsJoinR@3

; 397  : 		{
; 398  : 			lpAnswer.Type = -1;
; 399  : 			DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_REQUESTANSWER));

  000c6	6a 18		 push	 24			; 00000018H
  000c8	8d 45 e4	 lea	 eax, DWORD PTR _lpAnswer$[ebp]
  000cb	50		 push	 eax
  000cc	51		 push	 ecx
  000cd	89 55 f4	 mov	 DWORD PTR _lpAnswer$[ebp+16], edx
  000d0	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	5b		 pop	 ebx

; 432  : 	}
; 433  : }

  000d9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000dc	33 cd		 xor	 ecx, ebp
  000de	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 04 00	 ret	 4
$LN8@DGAnsJoinR@3:

; 400  : 			return;
; 401  : 		}
; 402  : 		// ----
; 403  : 		if( lpData->Result == 0 ) //User already in guild

  000e9	85 c0		 test	 eax, eax
  000eb	75 23		 jne	 SHORT $LN7@DGAnsJoinR@3

; 404  : 		{
; 405  : 			lpAnswer.Type = -1;

  000ed	89 55 f4	 mov	 DWORD PTR _lpAnswer$[ebp+16], edx

; 406  : 			DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_REQUESTANSWER));

  000f0	6a 18		 push	 24			; 00000018H
$LN11@DGAnsJoinR@3:
  000f2	8d 55 e4	 lea	 edx, DWORD PTR _lpAnswer$[ebp]
  000f5	52		 push	 edx
  000f6	51		 push	 ecx
  000f7	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ff	5b		 pop	 ebx

; 432  : 	}
; 433  : }

  00100	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00103	33 cd		 xor	 ecx, ebp
  00105	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 04 00	 ret	 4
$LN7@DGAnsJoinR@3:
  00110	56		 push	 esi

; 407  : 			return;
; 408  : 		}
; 409  : 		// ----
; 410  : 		for( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++ )

  00111	be 00 dd 49 06	 mov	 esi, 105504000		; 0649dd00H
  00116	57		 push	 edi
  00117	bf 04 29 00 00	 mov	 edi, 10500		; 00002904H
  0011c	89 75 e0	 mov	 DWORD PTR tv347[ebp], esi
  0011f	90		 npad	 1
$LL27@DGAnsJoinR@3:

; 411  : 		{
; 412  : 			if( gObj[i].Name != NULL && !strcmp(lpData->Character, gObj[i].Name) )

  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00125	8d 74 06 5d	 lea	 esi, DWORD PTR [esi+eax+93]
  00129	85 f6		 test	 esi, esi
  0012b	0f 84 85 00 00
	00		 je	 $LN5@DGAnsJoinR@3
  00131	8b ce		 mov	 ecx, esi
  00133	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
$LL22@DGAnsJoinR@3:
  00136	8a 10		 mov	 dl, BYTE PTR [eax]
  00138	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0013a	75 1a		 jne	 SHORT $LN23@DGAnsJoinR@3
  0013c	84 d2		 test	 dl, dl
  0013e	74 12		 je	 SHORT $LN24@DGAnsJoinR@3
  00140	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00143	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00146	75 0e		 jne	 SHORT $LN23@DGAnsJoinR@3
  00148	83 c0 02	 add	 eax, 2
  0014b	83 c1 02	 add	 ecx, 2
  0014e	84 d2		 test	 dl, dl
  00150	75 e4		 jne	 SHORT $LL22@DGAnsJoinR@3
$LN24@DGAnsJoinR@3:
  00152	33 c0		 xor	 eax, eax
  00154	eb 05		 jmp	 SHORT $LN25@DGAnsJoinR@3
$LN23@DGAnsJoinR@3:
  00156	1b c0		 sbb	 eax, eax
  00158	83 d8 ff	 sbb	 eax, -1
$LN25@DGAnsJoinR@3:
  0015b	85 c0		 test	 eax, eax
  0015d	75 57		 jne	 SHORT $LN5@DGAnsJoinR@3

; 413  : 			{
; 414  : 				if( gObj[i].Connected == PLAYER_PLAYING )

  0015f	8b 4d e0	 mov	 ecx, DWORD PTR tv347[ebp]
  00162	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00168	83 7c 11 04 03	 cmp	 DWORD PTR [ecx+edx+4], 3
  0016d	75 47		 jne	 SHORT $LN5@DGAnsJoinR@3

; 415  : 				{
; 416  : 					_GUILD_INFO_STRUCT* lpGuild = Guild.AddMember(gObj[lpData->UserIndex].lpGuild->Name, gObj[i].Name, i, -1, 0, gGameServerCode / 20);

  0016f	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00176	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0017b	f7 e9		 imul	 ecx
  0017d	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00180	c1 fa 03	 sar	 edx, 3
  00183	69 c9 40 27 00
	00		 imul	 ecx, 10048		; 00002740H
  00189	8b c2		 mov	 eax, edx
  0018b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0018e	03 c2		 add	 eax, edx
  00190	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00196	50		 push	 eax
  00197	8b 84 11 18 06
	00 00		 mov	 eax, DWORD PTR [ecx+edx+1560]
  0019e	6a 00		 push	 0
  001a0	6a ff		 push	 -1
  001a2	57		 push	 edi
  001a3	56		 push	 esi
  001a4	83 c0 04	 add	 eax, 4
  001a7	50		 push	 eax
  001a8	b9 00 00 00 00	 mov	 ecx, OFFSET ?Guild@@3VCGuildClass@@A ; Guild
  001ad	e8 00 00 00 00	 call	 ?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z ; CGuildClass::AddMember

; 417  : 					// ----
; 418  : 					if( lpGuild != NULL )

  001b2	85 c0		 test	 eax, eax
  001b4	75 1b		 jne	 SHORT $LN20@DGAnsJoinR@3
$LN5@DGAnsJoinR@3:

; 407  : 			return;
; 408  : 		}
; 409  : 		// ----
; 410  : 		for( int i = OBJ_STARTUSERINDEX; i < OBJMAX; i++ )

  001b6	8b 75 e0	 mov	 esi, DWORD PTR tv347[ebp]
  001b9	81 c6 40 27 00
	00		 add	 esi, 10048		; 00002740H
  001bf	47		 inc	 edi
  001c0	89 75 e0	 mov	 DWORD PTR tv347[ebp], esi
  001c3	81 fe 00 2f e3
	06		 cmp	 esi, 115552000		; 06e32f00H
  001c9	0f 8c 51 ff ff
	ff		 jl	 $LL27@DGAnsJoinR@3

; 417  : 					// ----
; 418  : 					if( lpGuild != NULL )

  001cf	eb 74		 jmp	 SHORT $LN4@DGAnsJoinR@3
$LN20@DGAnsJoinR@3:

; 419  : 					{
; 420  : 						gObj[i].lpGuild = lpGuild;

  001d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001d7	8b cf		 mov	 ecx, edi
  001d9	69 c9 40 27 00
	00		 imul	 ecx, 10048		; 00002740H
  001df	89 84 11 18 06
	00 00		 mov	 DWORD PTR [ecx+edx+1560], eax

; 421  : 						gObj[i].GuildStatus = 0;

  001e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001ec	c7 84 11 28 06
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+edx+1576], 0

; 422  : 						gObj[i].GuildNumber = lpGuild->Number;

  001f7	8b 00		 mov	 eax, DWORD PTR [eax]
  001f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  001ff	89 84 11 14 06
	00 00		 mov	 DWORD PTR [ecx+edx+1556], eax

; 423  : 						gObj[i].iGuildUnionTimeStamp = 0;

  00206	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0020b	c7 84 01 2c 06
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+1580], 0

; 424  : 						GCGuildViewportNowPaint(i, gObj[lpData->UserIndex].lpGuild->Name, gObj[i].lpGuild->Mark, FALSE);

  00216	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00219	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0021e	69 d2 40 27 00
	00		 imul	 edx, 10048		; 00002740H
  00224	8b 8c 01 18 06
	00 00		 mov	 ecx, DWORD PTR [ecx+eax+1560]
  0022b	8b 84 02 18 06
	00 00		 mov	 eax, DWORD PTR [edx+eax+1560]
  00232	6a 00		 push	 0
  00234	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00237	51		 push	 ecx
  00238	83 c0 04	 add	 eax, 4
  0023b	50		 push	 eax
  0023c	57		 push	 edi
  0023d	e8 00 00 00 00	 call	 ?GCGuildViewportNowPaint@@YAXHPADPAEH@Z ; GCGuildViewportNowPaint
  00242	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@DGAnsJoinR@3:

; 425  : 						break;
; 426  : 					}
; 427  : 				}
; 428  : 			}
; 429  : 		}
; 430  : 		// ----
; 431  : 		DataSend(lpData->UserIndex, (LPBYTE)&lpAnswer, sizeof(GUILDMATCH_GCANS_REQUESTANSWER));

  00245	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00248	6a 18		 push	 24			; 00000018H
  0024a	8d 4d e4	 lea	 ecx, DWORD PTR _lpAnswer$[ebp]
  0024d	51		 push	 ecx
  0024e	52		 push	 edx
  0024f	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00254	83 c4 0c	 add	 esp, 12			; 0000000cH
  00257	5f		 pop	 edi
  00258	5e		 pop	 esi
$LN13@DGAnsJoinR@3:

; 432  : 	}
; 433  : }

  00259	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0025c	33 cd		 xor	 ecx, ebp
  0025e	5b		 pop	 ebx
  0025f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00264	8b e5		 mov	 esp, ebp
  00266	5d		 pop	 ebp
  00267	c2 04 00	 ret	 4
?DGAnsJoinReqAnswer@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_REQUESTANSWER@@@Z ENDP ; GuildMatch::DGAnsJoinReqAnswer
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqJoinReqList@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_REQUESTLIST@@@Z ; GuildMatch::CGReqJoinReqList
; Function compile flags: /Ogtp
;	COMDAT ?CGReqJoinReqList@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_REQUESTLIST@@@Z
_TEXT	SEGMENT
_lpRequest$ = -24					; size = 19
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqJoinReqList@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_REQUESTLIST@@@Z PROC ; GuildMatch::CGReqJoinReqList, COMDAT
; _this$ = ecx

; 437  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _UserIndex$[ebp]

; 438  : 	if(		!OBJMAX_RANGE(UserIndex) 
; 439  : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00013	85 d2		 test	 edx, edx
  00015	78 65		 js	 SHORT $LN1@CGReqJoinR@4
  00017	33 c0		 xor	 eax, eax
  00019	81 fa eb 2c 00
	00		 cmp	 edx, 11499		; 00002cebH
  0001f	0f 9e c0	 setle	 al
  00022	85 c0		 test	 eax, eax
  00024	74 56		 je	 SHORT $LN1@CGReqJoinR@4
  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0002c	8b c2		 mov	 eax, edx
  0002e	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00034	03 c8		 add	 ecx, eax
  00036	83 79 04 03	 cmp	 DWORD PTR [ecx+4], 3
  0003a	75 40		 jne	 SHORT $LN1@CGReqJoinR@4

; 440  : 	{
; 441  : 		return;
; 442  : 	}
; 443  : 	// ----
; 444  : 	GUILDMATCH_GDREQ_REQUESTLIST lpRequest = { 0 };

  0003c	33 c0		 xor	 eax, eax
  0003e	89 45 e9	 mov	 DWORD PTR _lpRequest$[ebp+1], eax
  00041	89 45 ed	 mov	 DWORD PTR _lpRequest$[ebp+5], eax
  00044	89 45 f1	 mov	 DWORD PTR _lpRequest$[ebp+9], eax
  00047	89 45 f5	 mov	 DWORD PTR _lpRequest$[ebp+13], eax
  0004a	66 89 45 f9	 mov	 WORD PTR _lpRequest$[ebp+17], ax

; 445  : 	lpRequest.h.c			= 0xC1;
; 446  : 	lpRequest.h.headcode	= 0xED;
; 447  : 	lpRequest.h.subcode		= 0x07;
; 448  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_REQUESTLIST);
; 449  : 	lpRequest.UserIndex		= UserIndex;

  0004e	89 55 ec	 mov	 DWORD PTR _lpRequest$[ebp+4], edx
  00051	c7 45 e8 c1 13
	ed 07		 mov	 DWORD PTR _lpRequest$[ebp], 132977601 ; 07ed13c1H

; 450  : 	memcpy(lpRequest.GuildMaster, gObj[UserIndex].Name, 10);

  00058	8b 51 5d	 mov	 edx, DWORD PTR [ecx+93]
  0005b	89 55 f0	 mov	 DWORD PTR _lpRequest$[ebp+8], edx
  0005e	8b 41 61	 mov	 eax, DWORD PTR [ecx+97]
  00061	89 45 f4	 mov	 DWORD PTR _lpRequest$[ebp+12], eax
  00064	66 8b 49 65	 mov	 cx, WORD PTR [ecx+101]

; 451  : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(GUILDMATCH_GDREQ_REQUESTLIST));

  00068	6a 13		 push	 19			; 00000013H
  0006a	8d 55 e8	 lea	 edx, DWORD PTR _lpRequest$[ebp]
  0006d	66 89 4d f8	 mov	 WORD PTR _lpRequest$[ebp+16], cx
  00071	52		 push	 edx
  00072	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00077	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN1@CGReqJoinR@4:

; 452  : }

  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 08 00	 ret	 8
?CGReqJoinReqList@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_REQUESTLIST@@@Z ENDP ; GuildMatch::CGReqJoinReqList
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGAnsJoinReqList@GuildMatch@@QAEXPAE@Z		; GuildMatch::DGAnsJoinReqList
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsJoinReqList@GuildMatch@@QAEXPAE@Z
_TEXT	SEGMENT
tv219 = -1304						; size = 4
_lpAnswer$ = -1300					; size = 1296
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?DGAnsJoinReqList@GuildMatch@@QAEXPAE@Z PROC		; GuildMatch::DGAnsJoinReqList, COMDAT
; _this$ = ecx

; 456  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 05 00
	00		 sub	 esp, 1304		; 00000518H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _lpData$[ebp]
  00017	57		 push	 edi

; 457  : 	GUILDMATCH_DGANS_REQUESTLIST_COUNT* lpRecvCount = (GUILDMATCH_DGANS_REQUESTLIST_COUNT*)lpData;
; 458  : 	// ----
; 459  : 	if(		!OBJMAX_RANGE(lpRecvCount->UserIndex) 
; 460  : 		||	gObj[lpRecvCount->UserIndex].Connected != PLAYER_PLAYING )

  00018	8b 7e 05	 mov	 edi, DWORD PTR [esi+5]
  0001b	89 bd e8 fa ff
	ff		 mov	 DWORD PTR tv219[ebp], edi
  00021	85 ff		 test	 edi, edi
  00023	0f 88 d5 00 00
	00		 js	 $LN4@DGAnsJoinR@4
  00029	33 c0		 xor	 eax, eax
  0002b	81 ff eb 2c 00
	00		 cmp	 edi, 11499		; 00002cebH
  00031	0f 9e c0	 setle	 al
  00034	85 c0		 test	 eax, eax
  00036	0f 84 c2 00 00
	00		 je	 $LN4@DGAnsJoinR@4
  0003c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00042	8b c7		 mov	 eax, edi
  00044	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  0004a	83 7c 08 04 03	 cmp	 DWORD PTR [eax+ecx+4], 3
  0004f	0f 85 a9 00 00
	00		 jne	 $LN4@DGAnsJoinR@4

; 461  : 	{
; 462  : 		return;
; 463  : 	}
; 464  : 	// ----
; 465  : 	GUILDMATCH_GCANS_REQUESTLIST_COUNT lpAnswer = { 0 };

  00055	53		 push	 ebx
  00056	68 0f 05 00 00	 push	 1295			; 0000050fH
  0005b	8d 95 ed fa ff
	ff		 lea	 edx, DWORD PTR _lpAnswer$[ebp+1]
  00061	6a 00		 push	 0
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 _memset

; 466  : 	lpAnswer.h.c			= 0xC2;
; 467  : 	lpAnswer.h.headcode		= 0xED;
; 468  : 	lpAnswer.h.subcode		= 0x07;
; 469  : 	lpAnswer.h.sizeH		= SET_NUMBERH(sizeof(lpAnswer));
; 470  : 	lpAnswer.h.sizeL		= SET_NUMBERL(sizeof(lpAnswer));
; 471  : 	lpAnswer.RequestCount	= lpRecvCount->Count;

  00069	8b 46 09	 mov	 eax, DWORD PTR [esi+9]
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 472  : 	// ----
; 473  : 	GUILDMATCH_DGANS_REQUESTLIST_INFO* lpRecvInfo = (GUILDMATCH_DGANS_REQUESTLIST_INFO*)&lpData[sizeof(GUILDMATCH_DGANS_REQUESTLIST_COUNT)];
; 474  : 	// ----
; 475  : 	for( int i = 0; i < lpAnswer.RequestCount; i++ )

  0006f	33 c9		 xor	 ecx, ecx
  00071	66 c7 85 ef fa
	ff ff ed 07	 mov	 WORD PTR _lpAnswer$[ebp+3], 2029 ; 000007edH
  0007a	66 c7 85 ec fa
	ff ff c2 05	 mov	 WORD PTR _lpAnswer$[ebp], 1474 ; 000005c2H
  00083	c6 85 ee fa ff
	ff 10		 mov	 BYTE PTR _lpAnswer$[ebp+2], 16 ; 00000010H
  0008a	89 85 f4 fa ff
	ff		 mov	 DWORD PTR _lpAnswer$[ebp+8], eax
  00090	8d 5e 0d	 lea	 ebx, DWORD PTR [esi+13]
  00093	85 c0		 test	 eax, eax
  00095	7e 51		 jle	 SHORT $LN1@DGAnsJoinR@4
  00097	8d b5 f0 fa ff
	ff		 lea	 esi, DWORD PTR _lpAnswer$[ebp+4]
  0009d	8d bd fb fa ff
	ff		 lea	 edi, DWORD PTR _lpAnswer$[ebp+15]
  000a3	8d 95 fc fa ff
	ff		 lea	 edx, DWORD PTR _lpAnswer$[ebp+16]
  000a9	2b f3		 sub	 esi, ebx
  000ab	2b fb		 sub	 edi, ebx
  000ad	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  000b0	2b d3		 sub	 edx, ebx
$LL3@DGAnsJoinR@4:

; 476  : 	{
; 477  : 		memcpy(lpAnswer.m_RequestList[i].Character, lpRecvInfo[i].Character, 10);

  000b2	8b 58 f4	 mov	 ebx, DWORD PTR [eax-12]
  000b5	89 1c 06	 mov	 DWORD PTR [esi+eax], ebx
  000b8	8b 58 f8	 mov	 ebx, DWORD PTR [eax-8]
  000bb	89 5c 06 04	 mov	 DWORD PTR [esi+eax+4], ebx
  000bf	66 8b 58 fc	 mov	 bx, WORD PTR [eax-4]
  000c3	66 89 5c 06 08	 mov	 WORD PTR [esi+eax+8], bx

; 478  : 		lpAnswer.m_RequestList[i].Class = lpRecvInfo[i].Class / 16; //wrong...

  000c8	8a 58 ff	 mov	 bl, BYTE PTR [eax-1]
  000cb	c0 eb 04	 shr	 bl, 4
  000ce	88 1c 07	 mov	 BYTE PTR [edi+eax], bl

; 479  : 		lpAnswer.m_RequestList[i].Level = lpRecvInfo[i].Level;

  000d1	8b 18		 mov	 ebx, DWORD PTR [eax]
  000d3	89 1c 02	 mov	 DWORD PTR [edx+eax], ebx
  000d6	41		 inc	 ecx
  000d7	83 c0 10	 add	 eax, 16			; 00000010H
  000da	3b 8d f4 fa ff
	ff		 cmp	 ecx, DWORD PTR _lpAnswer$[ebp+8]
  000e0	7c d0		 jl	 SHORT $LL3@DGAnsJoinR@4

; 472  : 	// ----
; 473  : 	GUILDMATCH_DGANS_REQUESTLIST_INFO* lpRecvInfo = (GUILDMATCH_DGANS_REQUESTLIST_INFO*)&lpData[sizeof(GUILDMATCH_DGANS_REQUESTLIST_COUNT)];
; 474  : 	// ----
; 475  : 	for( int i = 0; i < lpAnswer.RequestCount; i++ )

  000e2	8b bd e8 fa ff
	ff		 mov	 edi, DWORD PTR tv219[ebp]
$LN1@DGAnsJoinR@4:

; 480  : 	}
; 481  : 	// ----
; 482  : 	DataSend(lpRecvCount->UserIndex, (LPBYTE)&lpAnswer, sizeof(lpAnswer));

  000e8	68 10 05 00 00	 push	 1296			; 00000510H
  000ed	8d 85 ec fa ff
	ff		 lea	 eax, DWORD PTR _lpAnswer$[ebp]
  000f3	50		 push	 eax
  000f4	57		 push	 edi
  000f5	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000fa	83 c4 0c	 add	 esp, 12			; 0000000cH
  000fd	5b		 pop	 ebx
$LN4@DGAnsJoinR@4:

; 483  : }

  000fe	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00101	5f		 pop	 edi
  00102	33 cd		 xor	 ecx, ebp
  00104	5e		 pop	 esi
  00105	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 04 00	 ret	 4
?DGAnsJoinReqList@GuildMatch@@QAEXPAE@Z ENDP		; GuildMatch::DGAnsJoinReqList
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CGReqJoinReqStatus@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQSTATUS@@@Z ; GuildMatch::CGReqJoinReqStatus
; Function compile flags: /Ogtp
;	COMDAT ?CGReqJoinReqStatus@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQSTATUS@@@Z
_TEXT	SEGMENT
_lpRequest$ = -56					; size = 52
__$ArrayPad$ = -4					; size = 4
_UserIndex$ = 8						; size = 4
_lpData$ = 12						; size = 4
?CGReqJoinReqStatus@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQSTATUS@@@Z PROC ; GuildMatch::CGReqJoinReqStatus, COMDAT
; _this$ = ecx

; 487  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR _UserIndex$[ebp]

; 488  : 	if(		!OBJMAX_RANGE(UserIndex) 
; 489  : 		||	gObj[UserIndex].Connected != PLAYER_PLAYING )

  00014	85 ff		 test	 edi, edi
  00016	78 63		 js	 SHORT $LN1@CGReqJoinR@5
  00018	33 c0		 xor	 eax, eax
  0001a	81 ff eb 2c 00
	00		 cmp	 edi, 11499		; 00002cebH
  00020	0f 9e c0	 setle	 al
  00023	85 c0		 test	 eax, eax
  00025	74 54		 je	 SHORT $LN1@CGReqJoinR@5
  00027	56		 push	 esi
  00028	8b f7		 mov	 esi, edi
  0002a	69 f6 40 27 00
	00		 imul	 esi, 10048		; 00002740H
  00030	03 35 00 00 00
	00		 add	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00036	83 7e 04 03	 cmp	 DWORD PTR [esi+4], 3
  0003a	75 3e		 jne	 SHORT $LN7@CGReqJoinR@5

; 490  : 	{
; 491  : 		return;
; 492  : 	}
; 493  : 	// ----
; 494  : 	GUILDMATCH_GDREQ_JOINREQSTATUS lpRequest = { 0 };

  0003c	6a 33		 push	 51			; 00000033H
  0003e	8d 55 c9	 lea	 edx, DWORD PTR _lpRequest$[ebp+1]
  00041	6a 00		 push	 0
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 _memset

; 495  : 	lpRequest.h.c			= 0xC1;
; 496  : 	lpRequest.h.headcode	= 0xED;

  00049	c7 45 c8 c1 34
	ed 08		 mov	 DWORD PTR _lpRequest$[ebp], 149763265 ; 08ed34c1H

; 497  : 	lpRequest.h.subcode		= 0x08;
; 498  : 	lpRequest.h.size		= sizeof(GUILDMATCH_GDREQ_JOINREQSTATUS);
; 499  : 	lpRequest.UserIndex		= UserIndex;

  00050	89 7d cc	 mov	 DWORD PTR _lpRequest$[ebp+4], edi

; 500  : 	memcpy(lpRequest.Sender, gObj[UserIndex].Name, 10);

  00053	8b 46 5d	 mov	 eax, DWORD PTR [esi+93]
  00056	89 45 d0	 mov	 DWORD PTR _lpRequest$[ebp+8], eax
  00059	8b 4e 61	 mov	 ecx, DWORD PTR [esi+97]
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005f	89 4d d4	 mov	 DWORD PTR _lpRequest$[ebp+12], ecx
  00062	66 8b 56 65	 mov	 dx, WORD PTR [esi+101]

; 501  : 	cDBSMng.Send((PCHAR)&lpRequest, sizeof(GUILDMATCH_GDREQ_JOINREQSTATUS));

  00066	6a 34		 push	 52			; 00000034H
  00068	8d 45 c8	 lea	 eax, DWORD PTR _lpRequest$[ebp]
  0006b	50		 push	 eax
  0006c	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  00071	66 89 55 d8	 mov	 WORD PTR _lpRequest$[ebp+16], dx
  00075	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send
$LN7@CGReqJoinR@5:
  0007a	5e		 pop	 esi
$LN1@CGReqJoinR@5:

; 502  : }

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007e	33 cd		 xor	 ecx, ebp
  00080	5f		 pop	 edi
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 08 00	 ret	 8
?CGReqJoinReqStatus@GuildMatch@@QAEXHPAUGUILDMATCH_CGREQ_JOINREQSTATUS@@@Z ENDP ; GuildMatch::CGReqJoinReqStatus
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DGAnsJoinReqStatus@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_JOINREQSTATUS@@@Z ; GuildMatch::DGAnsJoinReqStatus
; Function compile flags: /Ogtp
;	COMDAT ?DGAnsJoinReqStatus@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_JOINREQSTATUS@@@Z
_TEXT	SEGMENT
_lpInfo$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_lpData$ = 8						; size = 4
?DGAnsJoinReqStatus@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_JOINREQSTATUS@@@Z PROC ; GuildMatch::DGAnsJoinReqStatus, COMDAT
; _this$ = ecx

; 506  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _lpData$[ebp]

; 507  : 	if(		!OBJMAX_RANGE(lpData->UserIndex) 
; 508  : 		||	gObj[lpData->UserIndex].Connected != PLAYER_PLAYING )

  00013	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00016	85 d2		 test	 edx, edx
  00018	0f 88 99 00 00
	00		 js	 $LN2@DGAnsJoinR@5
  0001e	33 c0		 xor	 eax, eax
  00020	81 fa eb 2c 00
	00		 cmp	 edx, 11499		; 00002cebH
  00026	0f 9e c0	 setle	 al
  00029	85 c0		 test	 eax, eax
  0002b	0f 84 86 00 00
	00		 je	 $LN2@DGAnsJoinR@5
  00031	8b c2		 mov	 eax, edx
  00033	69 c0 40 27 00
	00		 imul	 eax, 10048		; 00002740H
  00039	56		 push	 esi
  0003a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00040	83 7c 30 04 03	 cmp	 DWORD PTR [eax+esi+4], 3
  00045	5e		 pop	 esi
  00046	75 6f		 jne	 SHORT $LN2@DGAnsJoinR@5

; 509  : 	{
; 510  : 		return;
; 511  : 	}
; 512  : 	// ----
; 513  : 	GUILDMATCH_GCANS_JOINREQSTATUS lpInfo = { 0 };

  00048	33 c0		 xor	 eax, eax

; 514  : 	lpInfo.h.c			= 0xC1;
; 515  : 	lpInfo.h.headcode	= 0xED;
; 516  : 	lpInfo.h.subcode	= 0x08;
; 517  : 	lpInfo.h.size		= sizeof(GUILDMATCH_GCANS_JOINREQSTATUS);
; 518  : 	lpInfo.Unknown14	= 0x18;
; 519  : 	lpInfo.Unknown23	= 0x0B;
; 520  : 	// ----
; 521  : 	if( lpData->Result != 1 )

  0004a	83 79 08 01	 cmp	 DWORD PTR [ecx+8], 1
  0004e	89 45 e1	 mov	 DWORD PTR _lpInfo$[ebp+1], eax
  00051	89 45 ed	 mov	 DWORD PTR _lpInfo$[ebp+13], eax
  00054	89 45 f5	 mov	 DWORD PTR _lpInfo$[ebp+21], eax
  00057	89 45 e5	 mov	 DWORD PTR _lpInfo$[ebp+5], eax
  0005a	89 45 e9	 mov	 DWORD PTR _lpInfo$[ebp+9], eax
  0005d	89 45 f1	 mov	 DWORD PTR _lpInfo$[ebp+17], eax
  00060	66 89 45 f9	 mov	 WORD PTR _lpInfo$[ebp+25], ax
  00064	88 45 fb	 mov	 BYTE PTR _lpInfo$[ebp+27], al
  00067	c7 45 e0 c1 1c
	ed 08		 mov	 DWORD PTR _lpInfo$[ebp], 149757121 ; 08ed1cc1H
  0006e	c6 45 ee 18	 mov	 BYTE PTR _lpInfo$[ebp+14], 24 ; 00000018H
  00072	c6 45 f7 0b	 mov	 BYTE PTR _lpInfo$[ebp+23], 11 ; 0000000bH

; 522  : 	{
; 523  : 		lpInfo.Status = -2;
; 524  : 		DataSend(lpData->UserIndex, (LPBYTE)&lpInfo, sizeof(GUILDMATCH_GCANS_JOINREQSTATUS));

  00076	6a 1c		 push	 28			; 0000001cH
  00078	74 0d		 je	 SHORT $LN1@DGAnsJoinR@5
  0007a	8d 4d e0	 lea	 ecx, DWORD PTR _lpInfo$[ebp]
  0007d	c7 45 f8 fe ff
	ff ff		 mov	 DWORD PTR _lpInfo$[ebp+24], -2 ; fffffffeH
  00084	51		 push	 ecx

; 525  : 		return;

  00085	eb 27		 jmp	 SHORT $LN8@DGAnsJoinR@5
$LN1@DGAnsJoinR@5:

; 526  : 	}
; 527  : 	// ----
; 528  : 	lpInfo.Status = 0;

  00087	89 45 f8	 mov	 DWORD PTR _lpInfo$[ebp+24], eax

; 529  : 	memcpy(lpInfo.GuildMaster, lpData->GuildMaster, 10);

  0008a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0008d	89 45 e4	 mov	 DWORD PTR _lpInfo$[ebp+4], eax
  00090	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00093	89 45 e8	 mov	 DWORD PTR _lpInfo$[ebp+8], eax
  00096	66 8b 41 14	 mov	 ax, WORD PTR [ecx+20]
  0009a	66 89 45 ec	 mov	 WORD PTR _lpInfo$[ebp+12], ax

; 530  : 	memcpy(lpInfo.GuildName, lpData->GuildName, 8);

  0009e	8b 41 17	 mov	 eax, DWORD PTR [ecx+23]
  000a1	8b 49 1b	 mov	 ecx, DWORD PTR [ecx+27]
  000a4	89 45 ef	 mov	 DWORD PTR _lpInfo$[ebp+15], eax

; 531  : 	DataSend(lpData->UserIndex, (LPBYTE)&lpInfo, sizeof(GUILDMATCH_GCANS_JOINREQSTATUS));

  000a7	8d 45 e0	 lea	 eax, DWORD PTR _lpInfo$[ebp]
  000aa	89 4d f3	 mov	 DWORD PTR _lpInfo$[ebp+19], ecx
  000ad	50		 push	 eax
$LN8@DGAnsJoinR@5:
  000ae	52		 push	 edx
  000af	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@DGAnsJoinR@5:

; 532  : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
?DGAnsJoinReqStatus@GuildMatch@@QAEXPAUGUILDMATCH_DGANS_JOINREQSTATUS@@@Z ENDP ; GuildMatch::DGAnsJoinReqStatus
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ ; std::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::~_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$_Vector_val@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::~_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::~_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAE@XZ ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAE@XZ PROC ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAE@XZ ENDP ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>
_TEXT	ENDS
PUBLIC	??0?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAE@ABV01@@Z ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAE@ABV01@@Z PROC ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@I@Z ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@I@Z PROC ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4

; 183  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?deallocate@?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@I@Z ENDP ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::deallocate
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UGUILDMATCH_GCANS_OFFERLIST_INFO@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0@Z ; std::_Ptr_cat<GUILDMATCH_GCANS_OFFERLIST_INFO,GUILDMATCH_GCANS_OFFERLIST_INFO>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@UGUILDMATCH_GCANS_OFFERLIST_INFO@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UGUILDMATCH_GCANS_OFFERLIST_INFO@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0@Z PROC ; std::_Ptr_cat<GUILDMATCH_GCANS_OFFERLIST_INFO,GUILDMATCH_GCANS_OFFERLIST_INFO>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??$_Ptr_cat@UGUILDMATCH_GCANS_OFFERLIST_INFO@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0@Z ENDP ; std::_Ptr_cat<GUILDMATCH_GCANS_OFFERLIST_INFO,GUILDMATCH_GCANS_OFFERLIST_INFO>
_TEXT	ENDS
PUBLIC	??$_Destroy@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z ; std::_Destroy<GUILDMATCH_GCANS_OFFERLIST_INFO>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z PROC ; std::_Destroy<GUILDMATCH_GCANS_OFFERLIST_INFO>, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z ENDP ; std::_Destroy<GUILDMATCH_GCANS_OFFERLIST_INFO>
_TEXT	ENDS
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 38   : 		}

  00000	c3		 ret	 0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
PUBLIC	??_EOBJECTSTRUCT@@QAEPAXI@Z			; OBJECTSTRUCT::`vector deleting destructor'
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_EOBJECTSTRUCT@@QAEPAXI@Z$0
__ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_EOBJECTSTRUCT@@QAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_EOBJECTSTRUCT@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_EOBJECTSTRUCT@@QAEPAXI@Z PROC			; OBJECTSTRUCT::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	8a 5d 08	 mov	 bl, BYTE PTR ___flags$[ebp]
  0002e	f6 c3 02	 test	 bl, 2
  00031	74 3b		 je	 SHORT $LN3@vector
  00033	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  00036	68 00 00 00 00	 push	 OFFSET ??1OBJECTSTRUCT@@QAE@XZ
  0003b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0003e	50		 push	 eax
  0003f	68 40 27 00 00	 push	 10048			; 00002740H
  00044	56		 push	 esi
  00045	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0004a	f6 c3 01	 test	 bl, 1
  0004d	74 09		 je	 SHORT $LN2@vector
  0004f	57		 push	 edi
  00050	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00055	83 c4 04	 add	 esp, 4
$LN2@vector:
  00058	8b c7		 mov	 eax, edi
  0005a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00064	59		 pop	 ecx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
$LN3@vector:
  0006e	8d 8e ec 20 00
	00		 lea	 ecx, DWORD PTR [esi+8428]
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007b	e8 00 00 00 00	 call	 ??1TMonsterAIAgro@@UAE@XZ ; TMonsterAIAgro::~TMonsterAIAgro
  00080	8d 8e 0c 16 00
	00		 lea	 ecx, DWORD PTR [esi+5644]
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	e8 00 00 00 00	 call	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
  00092	f6 c3 01	 test	 bl, 1
  00095	74 09		 je	 SHORT $LN1@vector
  00097	56		 push	 esi
  00098	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0009d	83 c4 04	 add	 esp, 4
$LN1@vector:
  000a0	8b c6		 mov	 eax, esi
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_EOBJECTSTRUCT@@QAEPAXI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	81 c1 0c 16 00
	00		 add	 ecx, 5644		; 0000160cH
  00009	e9 00 00 00 00	 jmp	 ??1CSkillDelay@@UAE@XZ	; CSkillDelay::~CSkillDelay
__ehhandler$??_EOBJECTSTRUCT@@QAEPAXI@Z:
  0000e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00012	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00015	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_EOBJECTSTRUCT@@QAEPAXI@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_EOBJECTSTRUCT@@QAEPAXI@Z ENDP			; OBJECTSTRUCT::`vector deleting destructor'
PUBLIC	??0?$_Vector_val@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@1@@Z ; std::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@1@@Z PROC ; std::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@1@@Z ENDP ; std::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Vector_val<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::destroy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z PROC ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@QAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z ENDP ; std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>::destroy
_TEXT	ENDS
PUBLIC	??0?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ PROC ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ ENDP ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@YAXAAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@PAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z ; std::_Dest_val<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>,GUILDMATCH_GCANS_OFFERLIST_INFO>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@YAXAAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@PAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@YAXAAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@PAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z PROC ; std::_Dest_val<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>,GUILDMATCH_GCANS_OFFERLIST_INFO>, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@YAXAAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@PAUGUILDMATCH_GCANS_OFFERLIST_INFO@@@Z ENDP ; std::_Dest_val<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO>,GUILDMATCH_GCANS_OFFERLIST_INFO>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0AAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0AAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0AAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >, COMDAT

; 96   : 	for (; _First != _Last; ++_First)
; 97   : 		_Dest_val(_Al, _First);
; 98   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0AAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0AAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@@Z ; std::_Destroy_range<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0AAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0AAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@@Z PROC ; std::_Destroy_range<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@YAXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0AAV?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@IAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0@Z ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Destroy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@IAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@IAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0@Z PROC ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@IAEXPAUGUILDMATCH_GCANS_OFFERLIST_INFO@@0@Z ENDP ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@IAEXXZ ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@IAEXXZ PROC ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN6@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();
; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000f	83 c4 04	 add	 esp, 4
$LN6@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00026	5e		 pop	 esi

; 1312 : 		}

  00027	c3		 ret	 0
?_Tidy@?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@IAEXXZ ENDP ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::_Tidy
_TEXT	ENDS
PUBLIC	??1?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::~vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ PROC ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::~vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >, COMDAT
; _this$ = ecx

; 704  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 705  : 		_Tidy();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN8@vector@2
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000f	83 c4 04	 add	 esp, 4
$LN8@vector@2:
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00026	5e		 pop	 esi

; 706  : 		}

  00027	c3		 ret	 0
??1?$vector@UGUILDMATCH_GCANS_OFFERLIST_INFO@@V?$allocator@UGUILDMATCH_GCANS_OFFERLIST_INFO@@@std@@@std@@QAE@XZ ENDP ; std::vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >::~vector<GUILDMATCH_GCANS_OFFERLIST_INFO,std::allocator<GUILDMATCH_GCANS_OFFERLIST_INFO> >
_TEXT	ENDS
PUBLIC	??_7GuildMatch@@6B@				; GuildMatch::`vftable'
PUBLIC	??0GuildMatch@@QAE@XZ				; GuildMatch::GuildMatch
PUBLIC	??_R4GuildMatch@@6B@				; GuildMatch::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGuildMatch@@@8				; GuildMatch `RTTI Type Descriptor'
PUBLIC	??_R3GuildMatch@@8				; GuildMatch::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GuildMatch@@8				; GuildMatch::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GuildMatch@@8			; GuildMatch::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EGuildMatch@@UAEPAXI@Z:PROC			; GuildMatch::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@GuildMatch@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R1A@?0A@EA@GuildMatch@@8 DD FLAT:??_R0?AVGuildMatch@@@8 ; GuildMatch::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GuildMatch@@8
rdata$r	ENDS
;	COMDAT ??_R2GuildMatch@@8
rdata$r	SEGMENT
??_R2GuildMatch@@8 DD FLAT:??_R1A@?0A@EA@GuildMatch@@8	; GuildMatch::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3GuildMatch@@8
rdata$r	SEGMENT
??_R3GuildMatch@@8 DD 00H				; GuildMatch::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2GuildMatch@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGuildMatch@@@8
_DATA	SEGMENT
??_R0?AVGuildMatch@@@8 DD FLAT:??_7type_info@@6B@	; GuildMatch `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGuildMatch@@', 00H
_DATA	ENDS
;	COMDAT ??_R4GuildMatch@@6B@
rdata$r	SEGMENT
??_R4GuildMatch@@6B@ DD 00H				; GuildMatch::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGuildMatch@@@8
	DD	FLAT:??_R3GuildMatch@@8
rdata$r	ENDS
;	COMDAT ??_7GuildMatch@@6B@
CONST	SEGMENT
??_7GuildMatch@@6B@ DD FLAT:??_R4GuildMatch@@6B@	; GuildMatch::`vftable'
	DD	FLAT:??_EGuildMatch@@UAEPAXI@Z
; Function compile flags: /Ogtp
; File c:\muserver_dev\development\mu-s8ep2-repack\gameserver\source\guildmatch.cpp
CONST	ENDS
;	COMDAT ??0GuildMatch@@QAE@XZ
_TEXT	SEGMENT
??0GuildMatch@@QAE@XZ PROC				; GuildMatch::GuildMatch, COMDAT
; _this$ = ecx

; 13   : {

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7GuildMatch@@6B@
  0000a	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0000d	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00010	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 14   : 
; 15   : }

  00013	c3		 ret	 0
??0GuildMatch@@QAE@XZ ENDP				; GuildMatch::GuildMatch
_TEXT	ENDS
PUBLIC	??1GuildMatch@@UAE@XZ				; GuildMatch::~GuildMatch
; Function compile flags: /Ogtp
;	COMDAT ??1GuildMatch@@UAE@XZ
_TEXT	SEGMENT
??1GuildMatch@@UAE@XZ PROC				; GuildMatch::~GuildMatch, COMDAT
; _this$ = ecx

; 19   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7GuildMatch@@6B@

; 20   : 
; 21   : }

  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	85 c0		 test	 eax, eax
  0000e	74 09		 je	 SHORT $LN11@GuildMatch
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00016	83 c4 04	 add	 esp, 4
$LN11@GuildMatch:
  00019	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0002e	5e		 pop	 esi
  0002f	c3		 ret	 0
??1GuildMatch@@UAE@XZ ENDP				; GuildMatch::~GuildMatch
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GGuildMatch@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GGuildMatch@@UAEPAXI@Z PROC				; GuildMatch::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1GuildMatch@@UAE@XZ	; GuildMatch::~GuildMatch
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GGuildMatch@@UAEPAXI@Z ENDP				; GuildMatch::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_GuildMatch@@YAXXZ
text$yc	SEGMENT
??__Eg_GuildMatch@@YAXXZ PROC				; `dynamic initializer for 'g_GuildMatch'', COMDAT

; 9    : GuildMatch g_GuildMatch;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GuildMatch@@3VGuildMatch@@A ; g_GuildMatch
  00005	e8 00 00 00 00	 call	 ??0GuildMatch@@QAE@XZ	; GuildMatch::GuildMatch
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_GuildMatch@@YAXXZ ; `dynamic atexit destructor for 'g_GuildMatch''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_GuildMatch@@YAXXZ ENDP				; `dynamic initializer for 'g_GuildMatch''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_GuildMatch@@YAXXZ
text$yd	SEGMENT
??__Fg_GuildMatch@@YAXXZ PROC				; `dynamic atexit destructor for 'g_GuildMatch'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_GuildMatch@@3VGuildMatch@@A ; g_GuildMatch
  00005	e9 00 00 00 00	 jmp	 ??1GuildMatch@@UAE@XZ	; GuildMatch::~GuildMatch
??__Fg_GuildMatch@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_GuildMatch''
text$yd	ENDS
PUBLIC	?g_GuildMatch@@3VGuildMatch@@A			; g_GuildMatch
_BSS	SEGMENT
?g_GuildMatch@@3VGuildMatch@@A DB 014H DUP (?)		; g_GuildMatch
_BSS	ENDS
CRT$XCU	SEGMENT
_g_GuildMatch$initializer$ DD FLAT:??__Eg_GuildMatch@@YAXXZ
CRT$XCU	ENDS
END
